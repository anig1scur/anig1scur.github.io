<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ac3r&#39;s Blog</title>
  <icon>http://r.piggy.lol/icon.png</icon>
  <subtitle>lol</subtitle>
  <link href="http://r.piggy.lol/atom.xml" rel="self"/>
  
  <link href="http://r.piggy.lol/"/>
  <updated>2024-08-06T16:11:26.781Z</updated>
  <id>http://r.piggy.lol/</id>
  
  <author>
    <name>Piggy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>反思我的初恋以及谈谈对伴侣的选择</title>
    <link href="http://r.piggy.lol/2024/08/06/reflex-on-my-first-love-and-discuss-choosing-partner/"/>
    <id>http://r.piggy.lol/2024/08/06/reflex-on-my-first-love-and-discuss-choosing-partner/</id>
    <published>2024-08-06T15:07:25.000Z</published>
    <updated>2024-08-06T16:11:26.781Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前情提要：内容涉及异性恋、恋爱脑，可能让人产生不适，请谨慎阅读。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;喜欢&quot;&gt;&lt;a href=&quot;#喜欢&quot; class=&quot;headerlink&quot; title=&quot;喜欢&quot;&gt;&lt;/a&gt;喜欢&lt;/h3&gt;&lt;p&gt;我会很喜欢这种可爱的人，在输入 property 时会因为后面连续的一串联想到音游快感的人，在突如其来的雨中会开心溅着水花回家的人。给一个概括的话就是于细微处能发掘好玩的点，对意外情况适应能力很强，甚至可以反过来嘲讽，相对来说 “神经病” 一点的人。我喜欢和这样的人来往，体现在不管是交朋友还是伴侣选择上。&lt;/p&gt;
&lt;p&gt;不谈我自己是不是一个这样的人，我是否适合（换种说法“配不配”）。我总是被这样的人吸引，也会给予 ta 们更多的耐心。听上去或许是很简单的点，但是和其他基本的为人准则，和我狭窄的交友圈叠在一起的时候，有类似特质的人我觉得并不多见。&lt;/p&gt;
&lt;h3 id=&quot;标准&quot;&gt;&lt;a href=&quot;#标准&quot; class=&quot;headerlink&quot; title=&quot;标准&quot;&gt;&lt;/a&gt;标准&lt;/h3&gt;&lt;p&gt;所以现在回过头来看，我之前和前任进入亲密关系时，是一个仓促慌忙的决定，实际上是安全的但并非正确的选择。我觉得我在孤独与莫名其妙的生理吸引双重包裹之下，都没怎么好好了解彼此就在一起了。&lt;/p&gt;
&lt;p&gt;那个时候我不知道自己的标准，我不曾期待一段亲密关系应该给我带来什么。我只是想找些新鲜的好玩的事情先试试，类似于一种赌徒心理 “万一呢？”，试试也不亏，就好比现在分手了我还能复盘心路历程在这里产出文章 。（我才不要称之为小作文，被污名化的小作文不许来拉低我文字的档次）&lt;/p&gt;
&lt;p&gt;在这个层面，我是渣女。&lt;/p&gt;
&lt;h3 id=&quot;初恋&quot;&gt;&lt;a href=&quot;#初恋&quot; class=&quot;headerlink&quot; title=&quot;初恋&quot;&gt;&lt;/a&gt;初恋&lt;/h3&gt;&lt;p&gt;这是他的也是我的第一次恋爱，在刚开始的时候，我们都略显客气，甚至会因自己的经验不足而互相提前打好照面。那个时候我们都说：嗯..！要学习，要保持沟通！那个时候，每个餐厅每个公园都是新鲜的，走在不同的街道牵手都会觉得不一样。&lt;/p&gt;
&lt;p&gt;但是后来不知哪一天就变成了一个觉得另一个缄口不言，一个觉得另一个说了不听。或许我们曾经对对方是喜欢的，只是这个力量不足以让我们为对方改变，毕竟是逆人性的事情。&lt;/p&gt;
&lt;h3 id=&quot;症结&quot;&gt;&lt;a href=&quot;#症结&quot; class=&quot;headerlink&quot; title=&quot;症结&quot;&gt;&lt;/a&gt;症结&lt;/h3&gt;&lt;p&gt;后来我们对对方认识更多了，我还是不能说“了解”他，我只能谈从处事风格上的“认识”。我逐渐发现，他，情绪是没有的，变化是没有的，惊喜是没有的。我也想他在我面前变得像个小孩，也希望某天出门前发现冰箱贴着一个小便签写着奇奇怪怪的文字，在生活无助我却灵光乍现的时候可以被夸一句“你好可爱哦”。那是在这个世界里抵抗重复与无聊的武器。&lt;/p&gt;
&lt;p&gt;原本我希望自己是一个这样对待别人的人，但我的观察下他不是一个这样的人，所以我对自己说：那我也不要对他这样，我干嘛要对别人这么好呢！于是在默默的无声的博弈之下，我更不开心了，因为他阻止我成为一个我想成为的人，一个温暖的人。&lt;/p&gt;
&lt;p&gt;这还都是次要的，可以用太钝感、不擅长或没经验云云来解释，又或许这些准则因人而异，我对伴侣并不在这些锦上添花的点上有强制要求，大家都是人类呢。让我痛苦的点是，我认为他看不见我，不珍视我的话语与内心情感，关于这一点我想归结为男性普遍的共情力弱的特征。这是最重要的，但我不展开也没法展开太多。&lt;/p&gt;
&lt;p&gt;在这个层面，他是好人但是个渣男。&lt;/p&gt;
&lt;h3 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h3&gt;&lt;p&gt;这里一定会紧跟着一个 but，but，我们也不是没有快乐的时刻，他也曾对我充满耐心和包容，我也向往过是不是可以一直走下去。但是我不应该一一去回想了。&lt;/p&gt;
&lt;p&gt;我喜欢反思，喜欢写这样的小随笔记录我当下的状态。如果这些文字源于真挚的抒发，那我不会害怕他人的观感或者几年后我自己的观感。其实我不知道在别人眼里看来尤其是前任那里看来是怎样，就当做一种记忆的封存吧，虽然显得我即使分手一段时间了还在纠结这那的样子。（BTW：根据经验，前任大概率不会认真看而是扫读从中摘出些许关键字进行反驳或文字合理性的讨论）&lt;/p&gt;
&lt;p&gt;最后回到标题的后半截，其实根据上文已经有了答案。但我还想再补充，关于伴侣的选择，我希望我遇到的这个人能够不再让我觉得我 deserve 而是我觉得 ta 足够 deserve，可爱到让我无条件对 ta</summary>
        
      
    
    
    
    
    <category term="亲密关系" scheme="http://r.piggy.lol/tags/%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB/"/>
    
  </entry>
  
  <entry>
    <title>寻姐妹一起做些有意义的项目</title>
    <link href="http://r.piggy.lol/2024/07/04/find-a-coworker/"/>
    <id>http://r.piggy.lol/2024/07/04/find-a-coworker/</id>
    <published>2024-07-04T07:55:25.000Z</published>
    <updated>2024-08-06T16:09:37.255Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;大家好，我是一名工作三年的前端工程师，在后端工作一年后转岗到前端（问就是不喜欢 :P ），所以也会些 Web 服务端的事情。现在想寻一些有相同想法的姐妹做些有意义（没意义也可以）的项目，核心的点是 &lt;strong&gt;偏轻量，有创意，好玩的，女性主义&lt;/strong&gt; 的应用。&lt;/p&gt;
&lt;p&gt;因为不太想为服务器支出开销和费心力去维护后端服务的稳定，&lt;strong&gt;尽量做一些纯前端应用&lt;/strong&gt;吧，如果真的有需要的我们再考虑动态网页这个事情。&lt;/p&gt;
&lt;h3 id=&quot;我可以提供&quot;&gt;&lt;a href=&quot;#我可以提供&quot; class=&quot;headerlink&quot; title=&quot;我可以提供&quot;&gt;&lt;/a&gt;我可以提供&lt;/h3&gt;&lt;p&gt;如果你不是很会 React 但是想 contribute，你已经有一点前端基础了，比如会搭环境，会 Github ，懂 HTML + CSS + JavaScript 三件套。我可以提供为你开发功能进行免费协助和答疑（北京时间晚 20:00 - 22:00 )&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;前提是自己具有一定的动手和探索能力，带着问题现象描述和你已经探索的可能性来询问，会降低很多无效沟通的可能性&lt;/li&gt;
&lt;li&gt;想参与但是完全没有前端基础的话，很推荐 MDN 的这个教程： &lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Learn&quot;&gt;学习 Web 开发&lt;/a&gt; 进行一些入门。发现新增的这个 &lt;a href=&quot;https://developer.mozilla.org/en-US/curriculum/&quot;&gt;curriculum&lt;/a&gt; 也非常不错&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;我需要你提供&quot;&gt;&lt;a href=&quot;#我需要你提供&quot; class=&quot;headerlink&quot; title=&quot;我需要你提供&quot;&gt;&lt;/a&gt;我需要你提供&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;如果你有做一个产品的经验，可以提供一些具有可操作性的 idea&lt;/li&gt;
&lt;li&gt;如果你是一个苛刻的用户，可以对现有项目提改进建议，分享你的用户体验&lt;/li&gt;
&lt;li&gt;如果你是设计师&lt;ol&gt;
&lt;li&gt;可以为我们想做的产品提供一份原型图或一份设计稿&lt;ul&gt;
&lt;li&gt;勿过于天马行空，实现成本太高&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;也可以为产品提供一个 logo 或一组 icon&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;如果你接触过 Web 开发，具有调试能力，可以参与到项目的开发中来&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;一些进行时的项目&quot;&gt;&lt;a href=&quot;#一些进行时的项目&quot; class=&quot;headerlink&quot; title=&quot;一些进行时的项目&quot;&gt;&lt;/a&gt;一些进行时的项目&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://r.piggy.lol/pod/&quot;&gt;Pod!&lt;/a&gt;&lt;br&gt;前段时间高强度学英语的时候，发现很多优质的音频&amp;amp;文本材料，就在想自己做一个 Web 应用来帮助充分利用这些资源，于是就有了这个项目。我先从 BBC 和 Scientific American 上扒下来一些源数据，用自己想要的方式做了一些功能：填空，听写和阅读这三种模式。还导入了常见词表包括：AWL 580，GRE 5000 等等。&lt;br&gt;&lt;img src=&quot;/2024/07/04/find-a-coworker/pod.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://r.piggy.lol/collage-poem/&quot;&gt;Collage Poem Maker&lt;/a&gt;&lt;br&gt;主体是一个 canvas 画板 + 从豆瓣网页上截图的图片作为物料，玩法是随机摘取拼成一首诗歌。（非常简陋，还有非常多的功能都没做）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2024/07/04/find-a-coworker/collage-poem.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;一些畅想中的项目&quot;&gt;&lt;a href=&quot;#一些畅想中的项目&quot; class=&quot;headerlink&quot; title=&quot;一些畅想中的项目&quot;&gt;&lt;/a&gt;一些畅想中的项目&lt;/h3&gt;&lt;p&gt;本人阅读过的文学作品不多，下面很多都是随口一说，不具有实际意义。需要具有文化底蕴或会系统化做一个产品的姐妹对这些 idea 进行进一步的探索展开。且 “虚拟迷宫” 和 “3d 房间” 这些概念看上去也似乎不是那么好实现。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;阿加莎作品探索迷宫&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户在一个虚拟迷宫中探索，迷宫的不同区域对应阿加莎作品中的不同场景或章节&lt;/li&gt;
&lt;li&gt;在探索过程中，用户会遇到线索，解答这些谜题可以进入新的区域&lt;/li&gt;
&lt;li&gt;除文字介绍，可以加入音频、电影片段、插图等多媒体内容，增加用户的沉浸感&lt;/li&gt;
&lt;li&gt;提供与阿加莎作品相关的背景资料和历史事件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一间只属于自己的房间&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;界面上是一个房间，伍尔夫在不同的晨昏时分伏案写作&lt;/li&gt;
&lt;li&gt;用户在房间内探索，不同的墙面上或桌面上，用户点击后会展示伍尔夫的作品 &amp;#x2F; 生平故事&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;其余任何什么好玩儿的应用，只要是在实现范围内的均可以&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;期待你的回复！如果 &amp;gt;&amp;#x3D; 3 个人联系我（通过邮箱: &lt;a href=&quot;mailto:&amp;#97;&amp;#110;&amp;#105;&amp;#103;&amp;#x69;&amp;#115;&amp;#99;&amp;#x75;&amp;#114;&amp;#x40;&amp;#103;&amp;#109;&amp;#x61;&amp;#x69;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#x6d;&quot;&gt;&amp;#97;&amp;#110;&amp;#105;&amp;#103;&amp;#x69;&amp;#115;&amp;#99;&amp;#x75;&amp;#114;&amp;#x40;&amp;#103;&amp;#109;&amp;#x61;&amp;#x69;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#x6d;&lt;/a&gt;），等我觉得一个 team 的角色都配备了之后会拉一个 slack</summary>
        
      
    
    
    
    
    <category term="前端" scheme="http://r.piggy.lol/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>2023 review</title>
    <link href="http://r.piggy.lol/2023/12/30/2023-review/"/>
    <id>http://r.piggy.lol/2023/12/30/2023-review/</id>
    <published>2023-12-30T04:45:07.000Z</published>
    <updated>2024-08-06T16:09:37.233Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;我猜 50 年后如果还活着，回顾起陈年往事应该会觉得 2023 是我生命中比较重要的一年吧。前几天在公司内网填年度个人总结，好像并想不起来具体做了什么，于是打开 github 一个格子一个格子地点开看，有时很绿，有时很浅，从里面摘抄有内容的写。现在也是一样，我没有太多记录的习惯，许多当时的心境想不起来了。只是这次打开的不是 github 而是相册，试图找回一点点记忆。&lt;/p&gt;
&lt;h2 id=&quot;一月&quot;&gt;&lt;a href=&quot;#一月&quot; class=&quot;headerlink&quot; title=&quot;一月&quot;&gt;&lt;/a&gt;一月&lt;/h2&gt;&lt;p&gt;1 月元旦，新冠还没完全好，心脏时不时隐隐作痛，但固执地跟着几个同事去了雨崩爬山。虫草线那天的记忆犹新，人生第一次站在 4500 海拔的地方吧，在山顶被赠予一颗枇杷润喉糖，眼前的清爽和喉咙的清凉混杂让一种奇异的感觉袭来。下山后在客栈大厅和路上同行的人凑了一大桌子吃饭，被安利了尼泊尔 EBC。有机会的话还想去一趟。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/erhai.jpg&quot; alt=&quot;在从德钦去昆明的路上，令人神往的亮晶晶的湖&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;二月&quot;&gt;&lt;a href=&quot;#二月&quot; class=&quot;headerlink&quot; title=&quot;二月&quot;&gt;&lt;/a&gt;二月&lt;/h2&gt;&lt;p&gt;2 月份应该是回家过年，我表现得很乖，大概没有和家里吵架。和高中宿舍几个人一起吃了饭，感觉没太多想说的，有循规蹈矩，也有出乎意料，大家都在各自的人生轨迹上慢慢努力着。没有什么特别印象深刻的东西了。回北京后重新和 z 出去玩，在雪后的香八拉遇到一个奇怪的不带手机不识地图的人，我们将近两年没有说话（her fault ! her fault!）但这次并没有觉得尴尬或奇怪，后面又自然而然开始联络，才知道她顺利的话毕业也要当前端，感觉在北京没那么孤独了。但我真的不喜欢这里。&lt;/p&gt;
&lt;h2 id=&quot;三月&quot;&gt;&lt;a href=&quot;#三月&quot; class=&quot;headerlink&quot; title=&quot;三月&quot;&gt;&lt;/a&gt;三月&lt;/h2&gt;&lt;p&gt;北京的春天很难得，满打满算也就两周的样子。正好园区里新开了一家瑞幸，大部分中午我取完咖啡会在樱花 &amp;#x2F; 梨花下面的椅子静坐一会儿，晒太阳，很舒服。戴着耳机感觉没人能打扰你，就是这样慢慢封闭自己的小世界的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/flower.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;后面和大学有个朋友去望宝川看桃花，交流得知她现在在做信息安全产品的销售，笑说当年深恶痛绝的本科知识现在居然能为自己的职业助一把力作为背书，感慨着，我蓦地想起大二时她转专业失败我安慰她的那天。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/wangbaochuan.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;与此同时，这个月有一个特别喜欢的同事彻底离职，舍不得，感觉在公司没乐趣了。 I’m so sad.&lt;/p&gt;
&lt;h2 id=&quot;四月&quot;&gt;&lt;a href=&quot;#四月&quot; class=&quot;headerlink&quot; title=&quot;四月&quot;&gt;&lt;/a&gt;四月&lt;/h2&gt;&lt;p&gt;在跟一名设计同事学习基础的设计知识，我教她 HTML + CSS + Javascript 三件套。感觉收获不少，虽然做起设计稿来动手能力很差，但至少能识别出一些基础的排版问题了，在工作中确实觉得很有帮助。也正好是我挺喜欢的事情，希望之后能再深入了解吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/design.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;每周四下班后在大会议室上公司订的手工课，做了不少小玩意：毛球毡，项链，流体熊。做的东西每周都变，手笨这一点是从来没变过。做的时候总是感觉时间过得很慢，是真的缺乏耐心。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/handwork.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/handwork2.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;五月&quot;&gt;&lt;a href=&quot;#五月&quot; class=&quot;headerlink&quot; title=&quot;五月&quot;&gt;&lt;/a&gt;五月&lt;/h2&gt;&lt;p&gt;这个时节北京到处都是月季花，天气还没那么热的时候，去了央美看毕业展，在这里看到了一些口罩残存的证明。和好多新奇的看不懂的玩儿意，实实在在感到自己的土鳖。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/ai.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;去爬三峰，同行的人脚受伤了，走夜路到很晚，晚上回去后在六道口那家《重山钵钵》吃串串。&lt;/p&gt;
&lt;p&gt;公司行政组织了一次花艺课，坐大巴去昌平放松了一下午。花园里很多小动物，很多外国人带着小朋友，很多小朋友识小动物。不管是之前公司课程还是去做花艺，任何需要投入短暂时间的手工活我都无法很专注，要改。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/flower2.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;六月&quot;&gt;&lt;a href=&quot;#六月&quot; class=&quot;headerlink&quot; title=&quot;六月&quot;&gt;&lt;/a&gt;六月&lt;/h2&gt;&lt;p&gt;蹭同事的车去了椴树岭，一路上的视野像是《千与千寻》开头坐在后座上的千寻，在密密麻麻的丛林里穿梭。觉得有车会开车真好！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/duanshuling.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;打《双人成行》，最开始觉得很好玩，后面有些审美疲劳。在咸鱼买的卡带，200 元入，180 元出。&lt;/p&gt;
&lt;h2 id=&quot;七月&quot;&gt;&lt;a href=&quot;#七月&quot; class=&quot;headerlink&quot; title=&quot;七月&quot;&gt;&lt;/a&gt;七月&lt;/h2&gt;&lt;p&gt;去走了东猴顶，夜路时大风大雨，天明后天气好些了。倒是不太累，就感觉后半程十分漫长，漫长得有些诡异。&lt;/p&gt;
&lt;p&gt;过生日，收到了朋友花重金带我去 ktv 录音棚对唱的大礼包，喜欢（但是被修音修得很厉害）。吃到了小猪佩奇蛋糕。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/sing.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;两个室友都不在家，聪明的摩托自己会开门溜出去了，被楼下下的邻居好心带回去。但我去领的时候又不见了，花了一下午找猫，最后发现藏在洗衣机和墙的夹缝里。&lt;/p&gt;
&lt;p&gt;陷入一些情感问题，但我后来发现，不把对方看得很重要于我才是最奏效的。&lt;/p&gt;
&lt;h2 id=&quot;八月&quot;&gt;&lt;a href=&quot;#八月&quot; class=&quot;headerlink&quot; title=&quot;八月&quot;&gt;&lt;/a&gt;八月&lt;/h2&gt;&lt;p&gt;租的房子到期了，签合同后被难缠的新房东摆了一道，哭了很久。哎，遇到不讲理的人还是不知道如何应对。后又找了一套，房东和我事儿都不多，客厅望出去有一树的银杏叶，住起来很舒服。&lt;/p&gt;
&lt;p&gt;搬家前在原来的房间里总能看到惊心动魄的夕阳，下午常常戴着耳机望向窗外发呆。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/sunset2.jpg&quot; alt=&quot;搬家前住的房间望出去的夕阳&quot;&gt;&lt;/p&gt;
&lt;p&gt;因为搬到了 1 公里左右的地方，在咸鱼上买了辆二手捷安特，淡绿色车架很好看，就是冬天下雪的时候被我弄得有点脏。发现骑自行车上下班真的很放松心情。&lt;/p&gt;
&lt;h2 id=&quot;九月&quot;&gt;&lt;a href=&quot;#九月&quot; class=&quot;headerlink&quot; title=&quot;九月&quot;&gt;&lt;/a&gt;九月&lt;/h2&gt;&lt;p&gt;天气开始转凉，毫无存在感的九月，完全不知道自己干嘛去了。时不时心血来潮做饭，一锅乱炖居然也能很好吃，感谢我的叻沙酱和椰汁。&lt;/p&gt;
&lt;p&gt;在海淀公园里和 z 聊起了高中一起读的《宇宙中心五道口》那篇文章，满google搜意林也没搜到，没想到最后在网易云音乐上找到了音频资源。朋友把它转成文本我再读了一遍，发现高中的我看字真是不挑…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2023/12/30/2023-review/universal_center.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;很多个周三都在吃达美乐披萨，美式风情土豆是不变的真爱，新发现的海鲜大满贯也很好吃，每次都会为了赠品玩几局小游戏，后来突然有一天说小程序在维护，然而维护到现在都没好。不健康但是一周一次应该还好吧？&lt;/p&gt;
&lt;h2 id=&quot;十月&quot;&gt;&lt;a href=&quot;#十月&quot; class=&quot;headerlink&quot; title=&quot;十月&quot;&gt;&lt;/a&gt;十月&lt;/h2&gt;&lt;p&gt;国庆去了亚丁大转山，但没转完，感觉自己的生存能力又大幅提升，回来后写了 2w 字游记。从呷洛村里出发经机耕路去城里的那天，在车上晃晃悠悠，窗外是断壁悬崖，窗内放汪峰的《光明》，简直摇滚极了。已经开始期待下次了，有机会想尝试重装徒步。&lt;/p&gt;
&lt;p&gt;买了个无线电手台完全没用到，借给领队了。&lt;/p&gt;
&lt;p&gt;回来后找了菲教上 15 个课时的口语课，以我的水平就是唠唠嗑都唠不明白的那种。选在每周一三五的上午九点半开始，25 分钟理说应该很轻松，但我还是倍感压力。因为她会问你，How about your weekend? How about your work &amp;#x2F; life? 当我试图去认真回答时，总觉得日复一日的乏善可陈的生活没有可说的。但是老师的情绪价值很到位，一般课前我会略微焦虑，课后总是心情很好，15 个课时下来也确实感到有进步。&lt;/p&gt;
&lt;h2 id=&quot;十一月&quot;&gt;&lt;a href=&quot;#十一月&quot; class=&quot;headerlink&quot; title=&quot;十一月&quot;&gt;&lt;/a&gt;十一月&lt;/h2&gt;&lt;p&gt;今年居然没有 happyday，可能公司穷疯了。怀念去年放开前和上文说很舍不得的同事一起做核酸大挑战的时候，当然，完全不怀念三天两检的日子。经历过才知道现在能“自由”地出行有多么难得。&lt;/p&gt;
&lt;p&gt;看了部很喜欢的电影《稍微想起一些》，可能片名已经单独在我心里加了两颗星了。&lt;/p&gt;
&lt;p&gt;体检还是那些问题，甲状腺结节，低密度脂蛋白胆固醇高，完全没有因为这些改变饮食习惯和作息。&lt;/p&gt;
&lt;p&gt;赶在秋天的尾巴最后一次出去徒步，是在密云梨花顶，很好看。爬许多大石头，初级路线走出了高级路线的惊心动魄。&lt;/p&gt;
&lt;h2 id=&quot;十二月&quot;&gt;&lt;a href=&quot;#十二月&quot; class=&quot;headerlink&quot; title=&quot;十二月&quot;&gt;&lt;/a&gt;十二月&lt;/h2&gt;&lt;p&gt;零零碎碎地就要过完 2023 了。&lt;/p&gt;
&lt;p&gt;这个冬天真的好冷，下大雪后的那几天日常零下十几度，但还是没有养成戴手套的习惯，总是忘记，然后手被吹得饱经沧桑。打算去办护照，却因为身份证找不到一拖再拖。参加公司的拳皇 1997 比赛，拿了 4&amp;#x2F;8 名，获免费日历一套。有个十年的老同学从上海过来出差，抽空吃了晚饭。得知了一些带来小小震撼的事情，不过… 其实也不算什么啦。悄悄带她去参观了公司，在大 logo 前面用拍立得留念，看人像一点点从相纸上浮现出来。&lt;/p&gt;
&lt;p&gt;在电影院看完了《涉过愤怒的海》，看哭。后来突发奇想下载探探把自己的 profile 设成周依然的生活照，和唯一认出来是她的体制内男生聊了大概两周，虽然每天都是有一搭没一搭的闲聊，但还是莫名感到压力。在迎接 2024 年的前一天，我跟他说“还是专注现实世界比较好”，然后卸载了这个软件。&lt;/p&gt;
&lt;h2 id=&quot;2024&quot;&gt;&lt;a href=&quot;#2024&quot; class=&quot;headerlink&quot; title=&quot;2024&quot;&gt;&lt;/a&gt;2024&lt;/h2&gt;&lt;p&gt;新的一年没有太多期望，希望了解一点乐理知识学习一下调音软件；在我的本职能写出更好更稳健的代码；再理想的情况是跳个槽换个城市吧。 （ P.S. 这是不是与 “没有太多” 有悖</summary>
        
      
    
    
    
    
    <category term="碎碎念" scheme="http://r.piggy.lol/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>用 Latex 写一个技术合同模板</title>
    <link href="http://r.piggy.lol/2022/06/16/technical-contract-latex/"/>
    <id>http://r.piggy.lol/2022/06/16/technical-contract-latex/</id>
    <published>2022-06-16T12:19:25.000Z</published>
    <updated>2024-08-06T16:09:37.270Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h3&gt;&lt;p&gt;最近收到了写技术合同（也叫软著）的任务，据说是可以减税，看了一眼之前的范例，发现这… 基本没有排版可言啊（也可能是我电脑上没有标准的 docx 查看器，用 google doc 打开是乱的），大家都是各写各的，令人惊奇的是这么多公司、学校在写的玩意，官方也并没有发标准的排版格式，和论文比起来美观度差很多。&lt;/p&gt;
&lt;p&gt;所以就想着.. 嗯！这个合同格式看上去也不是很难，不如写一个 latex 版的玩一玩。上次用 latex 是毕业的时候在 overleaf 套着别人的填填写写，还挺简单的。这次也许涉及到自己创建 cls 等等，我并不希望在这上面花太多时间，所以画图之类我会选择直接从 figma 等之类的软件手动绘图，而不是用 latex 的排版功能。&lt;/p&gt;
&lt;h2 id=&quot;Let’s-start-it&quot;&gt;&lt;a href=&quot;#Let’s-start-it&quot; class=&quot;headerlink&quot; title=&quot;Let’s start it&quot;&gt;&lt;/a&gt;Let’s start it&lt;/h2&gt;&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;XeTeX 3.14159265-2.6-0.999992 (TeX Live 2020&amp;#x2F;Debian)&lt;ul&gt;
&lt;li&gt;才发现 latex 的版本号是近似 π ，很 nerd 也很浪漫呢！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VS Code + LaTex Workshop Extension&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;0-字体&quot;&gt;&lt;a href=&quot;#0-字体&quot; class=&quot;headerlink&quot; title=&quot;0. 字体&quot;&gt;&lt;/a&gt;0. 字体&lt;/h3&gt;&lt;p&gt;长期使用 Linux 的话，由于没有什么参照物，有一些问题自己会注意不到。比如字体，感觉我电脑看见的所有 docx 文件因为种种原因都变了形，文件排版质感都很差。（装个 windows 虚拟机可以看到原始的吗？）不过幸好 wps 还保留着字体的名字 simsun，并且我通过多方（飞书在线文档、online docx to pdf）比对后确认是少了这个宋体。&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs sh&quot;&gt;wget https://files-cdn.cnblogs.com/files/xiaochina/simsun.zip&lt;br&gt;unar simsun.zip&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;cp&lt;/span&gt; simsun.ttc /usr/share/fonts/&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;cd&lt;/span&gt; /usr/share/fonts/&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;hljs-built_in&quot;&gt;chmod&lt;/span&gt; 644 simsun.ttc&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;sudo&lt;/span&gt; mkfontscale&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;sudo&lt;/span&gt; mkfontdir&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;sudo&lt;/span&gt; fc-cache -fsv&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装好以后就可以看到能称之为“正常”的文档啦~&lt;/p&gt;
&lt;h3 id=&quot;1-封面&quot;&gt;&lt;a href=&quot;#1-封面&quot; class=&quot;headerlink&quot; title=&quot;1. 封面&quot;&gt;&lt;/a&gt;1. 封面&lt;/h3&gt;&lt;p&gt;首先是这个封面，本身长得对排版要求很低…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/06/16/technical-contract-latex/cover.jpg&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-1-合同登记编号&quot;&gt;&lt;a href=&quot;#1-1-合同登记编号&quot; class=&quot;headerlink&quot; title=&quot;1.1 合同登记编号&quot;&gt;&lt;/a&gt;1.1 合同登记编号&lt;/h4&gt;&lt;p&gt;先完成最上角几个框框。对 Latex 一无所知，用 latex rectangle grid 作为关键词搜到了 tikz 这个库，首先是需要在主文件中加上 &lt;code&gt;&#92;usepackage&amp;#123;tikz&amp;#125;&lt;/code&gt;，然后画框框&lt;/p&gt;
&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs tex&quot;&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;% 宽高比都是随手调的，没有硬性限制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&#92;begin&lt;/span&gt;&amp;#123;tikzpicture&amp;#125;[xscale=0.8,yscale=1.256]&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;% 先画左边四个连续的黑框&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;&#92;draw&lt;/span&gt;[black,very thin] (0,0) grid (4,1);&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;% 间隔 1*1 个格子画下个 4*1&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;% 也可以用灰色虚线画一个间隔&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;% &#92;draw[gray,thin,dashed,dash pattern=on 1pt off 2pt] (4,0) grid +(1,1);&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;&#92;draw&lt;/span&gt;[black,thin] (5,0) grid +(4,1);&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;% 后续就都是类似的了&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;&#92;draw&lt;/span&gt;[black,thin] (10,0) grid +(2,1);&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;&#92;draw&lt;/span&gt;[black,thin] (13,0) grid +(6,1);&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;&#92;end&lt;/span&gt;&amp;#123;tikzpicture&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;画出来差不多长这样（左上角的字和细节后面再调）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/06/16/technical-contract-latex/grid.jpg&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-2-标题与主信息填写&quot;&gt;&lt;a href=&quot;#1-2-标题与主信息填写&quot; class=&quot;headerlink&quot; title=&quot;1.2 标题与主信息填写&quot;&gt;&lt;/a&gt;1.2 标题与主信息填写&lt;/h4&gt;&lt;p&gt;可以看到剩下的分为三部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;技术开发合同&lt;/code&gt; 总标题 &lt;/li&gt;
&lt;li&gt;三个需要在横线上填写的信息</summary>
        
      
    
    
    
    
    <category term="latex" scheme="http://r.piggy.lol/tags/latex/"/>
    
  </entry>
  
  <entry>
    <title>next.js 入个小门</title>
    <link href="http://r.piggy.lol/2022/06/15/nextjs/"/>
    <id>http://r.piggy.lol/2022/06/15/nextjs/</id>
    <published>2022-06-15T07:19:25.000Z</published>
    <updated>2024-08-06T16:09:37.268Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h2&gt;&lt;p&gt;一直都对前端很感兴趣！最近看了 nextjs 的文档更是感觉这个框架好简单，非常方便来弄个小项目。初步打算是弄一个拼贴诗的（之前有一个半废弃没做完的</summary>
        
      
    
    
    
    
    <category term="前端" scheme="http://r.piggy.lol/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="nextjs" scheme="http://r.piggy.lol/tags/nextjs/"/>
    
  </entry>
  
  <entry>
    <title>两年跨度间对女权一些问题的思考</title>
    <link href="http://r.piggy.lol/2022/06/12/feminism-1/"/>
    <id>http://r.piggy.lol/2022/06/12/feminism-1/</id>
    <published>2022-06-12T09:55:25.000Z</published>
    <updated>2024-08-06T16:09:37.253Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;今天跟高中朋友解释微博为什么被封号了，翻起了之前的内容，发现这篇“迷惑”正好是两年前的今天写的，看了下是很稚嫩，反观这七百多天我本人也并没有什么明显的成长，徒增马齿。但是我不会因此而耻于分享出来，能表达能让他人看见总是好的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/06/12/feminism-1/weibo.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;前文如上截图所示。两年了，我还是没有想通，只是现在看起来免觉当时站着说话不腰疼，因为对身边部分女性朋友那种“你们都醉我独醒”的优越感，就轻易去猜测，去下定义做推论。与此同时，我却根本没有资格，首先分不清“装傻示弱”究竟是为人的自由还是男权社会下为女的悲哀，我后来并没有看书去研究。我还是每天花很多时间照镜子，把自己穿得花里胡哨才出门，也想不通那发色究竟是为彰显“看，我多么自由开放”还是为外界的眼光追风而染。我同情那些因社会性不公在日复一日琐事中最终变得mad人们会说她“神经质的”家庭妇女，却难以和自己的妈妈亲近言和。在春节聚会里，成年很久却依旧不敢站出来愤怒地对男人说：你们可不可以去厨房帮点忙！不要老打牌，少喝酒！（meanwhile 我在坐享其成嗷嗷待哺）最痛苦的是，在这样的环境下，我从始至终很难说真正放弃了对“浪漫爱”会降临到自己身上的想象，用那个流行的词——祛魅，沉浸在偶像剧磕 cp 的快乐的那个人是我，放弃幻想接受事实的这个人也是我。&lt;/p&gt;
&lt;p&gt;一个很可笑的事实是，我几乎从小就表现得像个“女权主义者“，在男同学要帮我搬有一定重量的东西时我拒绝，那是因为&lt;strong&gt;我害怕开始有交集后周遭八卦的小屁孩起哄&lt;/strong&gt;，被大人发现；从来都跟身边的男生界限划清不欠人情，那是因为我觉得这样很有个性，思想品德书上教我不自立的人&lt;strong&gt;不会受到别人的尊重喜欢&lt;/strong&gt;。有一年春晚贾玲和另一位苗条的女演员表演了主题是“女神与女汉子”的小品，那时我根本没接触什么女权思想，但隐隐感到不适（即使这是创作和表演都来自于在喜剧界艰难站稳脚跟的女性作品），那… 也有一定原因是因为&lt;strong&gt;我胖矮，投射在那个小品里，我会是那个女汉子&lt;/strong&gt; 。以上强烈的个人主义，维护得小心翼翼，也就是说，如果我足够幸运有机会，我十分愿意选择当瞩目的被爱的拿尽一切好处的那一个。背负在各种嫉妒中的成长，这其实就是厌女，要承认、修正这一切太难。&lt;/p&gt;
&lt;p&gt;前几天唐山发生的无差别打人事件，朋友圈以前从不讨论相关问题的女性朋友也开始转发，相当一部分是对这种事件的无助恐惧情绪、对黑社会竟还存在的难以置信；另一部分把视角放在亟待反抗的几千年女性受压迫事实之下的探讨，少了很多。我不会说这些观念在朋友圈的转发不重要，装睡的人叫不醒。这一定是重要的，多一个人看到就多一份凝聚的力量。我有的时候想到种种问题，走在路上都不自觉地捏紧拳头，无数次告诉自己要理性，要像钢铁一般五毒不侵。如果我有一丝丝歇斯底里的情绪暴露，那就满足这个男权社会对女性的规训，正中他们所编造女的“就是情绪不稳定”之下怀了。&lt;/p&gt;
&lt;p&gt;出于我是个异性恋的事实，也出于我短期离不开这片沼泽地的事实，双重叠加让人生困惑蒙上了一层厚重的窗帘，拍打一下，灰尘簌簌而落，那是对光明渴望无声的呐喊。同样的问题两年前我在反思，今天我依旧在反思，不见明显的成长，一定程度上是工作以后我对自己的要求降低了。如果说今天有什么对自己的期望：别再为自己的人生郁郁悲哀，不要那样了。投入抗争中，为这社会的不公、黑暗———去揭露、改变哪怕一点点。&lt;/p&gt;
&lt;!-- 我今天把头发染黑了，黑得有些不正常，比原本的发色还要黑。不是想说要剥夺女性拾掇自己头发颜色的自由，我把它染黑正是今天对自己身体选择的自由。但我自身以后很少会再这样去做了，耗费时间、化学物质有害。我要投入那些对生命自由有益的呐喊!</summary>
        
      
    
    
    
    
    <category term="碎碎念" scheme="http://r.piggy.lol/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>今天去吃汉堡一路上拍的照片</title>
    <link href="http://r.piggy.lol/2022/05/29/burger-and-joy/"/>
    <id>http://r.piggy.lol/2022/05/29/burger-and-joy/</id>
    <published>2022-05-29T13:46:25.000Z</published>
    <updated>2024-08-06T16:09:37.253Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;今天总体只有二十多度，接下来几个月可能很难得了，所以我在下午四点多从家出发骑自行车到市中心吃点东西玩一玩，亮马河旁边有外国人聚会唱福音歌曲（应该是吧），闲适宁静，我停在那听了一会儿。&lt;/p&gt;
&lt;p&gt;大概六点的时候我到达&lt;code&gt;side street&lt;/code&gt;（一家有点贵的汉堡店）了，点了前一天同事告诉我的&lt;code&gt;绝代佳人&lt;/code&gt;，还不错肉食动物大概会很喜欢。这种不热的天气，听张震岳欢快的歌曲，走走停停，拍一些照片，真是很享受的事情！南锣鼓巷周边脏脏的很热闹，但也很无聊，千篇一律的店面。真心觉得我国在建筑与美学这方面有太长的路要走… 不过在满大街贴满社会主义核心价值观的当下，毫无味道的仿古风格的店面，相比要好那么一丢丢。&lt;/p&gt;
&lt;p&gt;我觉得以后要强迫自己常常出来，保持身心健康。当然，只是这么&lt;code&gt;觉得&lt;/code&gt; … 不想出来的时候怎么都不会出去，在屋里宅到天荒地老。&lt;/p&gt;
&lt;p&gt;分享下照片，要是在自己的服务器上存的话，我估计保存不了多久。所以放下传到 ins 上的 （画质为何这么差）：&lt;/p&gt;
&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-permalink=&quot;https://www.instagram.com/p/CeJU0car7EH/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; data-instgrm-version=&quot;14&quot; style=&quot; background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);&quot;&gt;&lt;div style=&quot;padding:16px;&quot;&gt; &lt;a href=&quot;https://www.instagram.com/p/CeJU0car7EH/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; style=&quot; background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;&quot; target=&quot;_blank&quot;&gt; &lt;div style=&quot; display: flex; flex-direction: row; align-items: center;&quot;&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: column; flex-grow: 1; justify-content: center;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding: 19% 0;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display:block; height:50px; margin:0 auto 12px; width:50px;&quot;&gt;&lt;svg width=&quot;50px&quot; height=&quot;50px&quot; viewBox=&quot;0 0 60 60&quot; version=&quot;1.1&quot; xmlns=&quot;https://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;https://www.w3.org/1999/xlink&quot;&gt;&lt;g stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;g transform=&quot;translate(-511.000000, -20.000000)&quot; fill=&quot;#000000&quot;&gt;&lt;g&gt;&lt;path d=&quot;M556.869,30.41 C554.814,30.41 553.148,32.076 553.148,34.131 C553.148,36.186 554.814,37.852 556.869,37.852 C558.924,37.852 560.59,36.186 560.59,34.131 C560.59,32.076 558.924,30.41 556.869,30.41 M541,60.657 C535.114,60.657 530.342,55.887 530.342,50 C530.342,44.114 535.114,39.342 541,39.342 C546.887,39.342 551.658,44.114 551.658,50 C551.658,55.887 546.887,60.657 541,60.657 M541,33.886 C532.1,33.886 524.886,41.1 524.886,50 C524.886,58.899 532.1,66.113 541,66.113 C549.9,66.113 557.115,58.899 557.115,50 C557.115,41.1 549.9,33.886 541,33.886 M565.378,62.101 C565.244,65.022 564.756,66.606 564.346,67.663 C563.803,69.06 563.154,70.057 562.106,71.106 C561.058,72.155 560.06,72.803 558.662,73.347 C557.607,73.757 556.021,74.244 553.102,74.378 C549.944,74.521 548.997,74.552 541,74.552 C533.003,74.552 532.056,74.521 528.898,74.378 C525.979,74.244 524.393,73.757 523.338,73.347 C521.94,72.803 520.942,72.155 519.894,71.106 C518.846,70.057 518.197,69.06 517.654,67.663 C517.244,66.606 516.755,65.022 516.623,62.101 C516.479,58.943 516.448,57.996 516.448,50 C516.448,42.003 516.479,41.056 516.623,37.899 C516.755,34.978 517.244,33.391 517.654,32.338 C518.197,30.938 518.846,29.942 519.894,28.894 C520.942,27.846 521.94,27.196 523.338,26.654 C524.393,26.244 525.979,25.756 528.898,25.623 C532.057,25.479 533.004,25.448 541,25.448 C548.997,25.448 549.943,25.479 553.102,25.623 C556.021,25.756 557.607,26.244 558.662,26.654 C560.06,27.196 561.058,27.846 562.106,28.894 C563.154,29.942 563.803,30.938 564.346,32.338 C564.756,33.391 565.244,34.978 565.378,37.899 C565.522,41.056 565.552,42.003 565.552,50 C565.552,57.996 565.522,58.943 565.378,62.101 M570.82,37.631 C570.674,34.438 570.167,32.258 569.425,30.349 C568.659,28.377 567.633,26.702 565.965,25.035 C564.297,23.368 562.623,22.342 560.652,21.575 C558.743,20.834 556.562,20.326 553.369,20.18 C550.169,20.033 549.148,20 541,20 C532.853,20 531.831,20.033 528.631,20.18 C525.438,20.326 523.257,20.834 521.349,21.575 C519.376,22.342 517.703,23.368 516.035,25.035 C514.368,26.702 513.342,28.377 512.574,30.349 C511.834,32.258 511.326,34.438 511.181,37.631 C511.035,40.831 511,41.851 511,50 C511,58.147 511.035,59.17 511.181,62.369 C511.326,65.562 511.834,67.743 512.574,69.651 C513.342,71.625 514.368,73.296 516.035,74.965 C517.703,76.634 519.376,77.658 521.349,78.425 C523.257,79.167 525.438,79.673 528.631,79.82 C531.831,79.965 532.853,80.001 541,80.001 C549.148,80.001 550.169,79.965 553.369,79.82 C556.562,79.673 558.743,79.167 560.652,78.425 C562.623,77.658 564.297,76.634 565.965,74.965 C567.633,73.296 568.659,71.625 569.425,69.651 C570.167,67.743 570.674,65.562 570.82,62.369 C570.966,59.17 571,58.147 571,50 C571,41.851 570.966,40.831 570.82,37.631&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div style=&quot;padding-top: 8px;&quot;&gt; &lt;div style=&quot; color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;&quot;&gt;View this post on Instagram&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding: 12.5% 0;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: row; margin-bottom: 14px; align-items: center;&quot;&gt;&lt;div&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(0px) translateY(7px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot;background-color: #F4F4F4; height: 12.5px; transform: rotate(-45deg) translateX(3px) translateY(1px); width: 12.5px; flex-grow: 0; margin-right: 14px; margin-left: 2px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(9px) translateY(-18px);&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: 8px;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: auto;&quot;&gt; &lt;div style=&quot; width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot; width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: column; flex-grow: 1; justify-content: center; margin-bottom: 24px;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/a&gt;&lt;p style=&quot; color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; line-height:17px; margin-bottom:0; margin-top:8px; overflow:hidden; padding:8px 0 7px; text-align:center; text-overflow:ellipsis; white-space:nowrap;&quot;&gt;&lt;a href=&quot;https://www.instagram.com/p/CeJU0car7EH/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; style=&quot; color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:normal; line-height:17px; text-decoration:none;&quot; target=&quot;_blank&quot;&gt;A post shared by zGina (@zgina80)&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt; &lt;script async</summary>
        
      
    
    
    
    
    <category term="北京" scheme="http://r.piggy.lol/tags/%E5%8C%97%E4%BA%AC/"/>
    
    <category term="小学生日记" scheme="http://r.piggy.lol/tags/%E5%B0%8F%E5%AD%A6%E7%94%9F%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>对 hexo 主题的改造</title>
    <link href="http://r.piggy.lol/2022/05/28/polish-hexo-theme/"/>
    <id>http://r.piggy.lol/2022/05/28/polish-hexo-theme/</id>
    <published>2022-05-28T05:46:25.000Z</published>
    <updated>2024-08-06T16:09:37.269Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;我很喜欢博客使用着的这个主题：&lt;a href=&quot;https://github.com/random-yang/paper&quot;&gt;paper&lt;/a&gt;，现在很多流行的主题太“动态”了，这个简约又不会太简单。但是也有几个想加以改造的地方，比如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首页右边快速导航栏并没有 sticky&lt;/li&gt;
&lt;li&gt;黑暗模式的处理过于粗暴，夜间模式下的主题色太扎眼。其余区域对比度又很单一，没有层次感。有点伤眼睛&lt;ul&gt;
&lt;li&gt;改进更人性化的夜间模式&lt;/li&gt;
&lt;li&gt;自设定主题色&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;总体比较适合文字的书写，对技术型博客相对不太适合&lt;ul&gt;
&lt;li&gt;优化一下 code bolck 的样式&lt;/li&gt;
&lt;li&gt;使代码块支持一键复制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最上方的导航只有&lt;code&gt;首页&lt;/code&gt;，也许我要放个 About Me&lt;/li&gt;
&lt;li&gt;全局搜索&lt;ul&gt;
&lt;li&gt;文章多了以后这个还挺重要&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;改造&quot;&gt;&lt;a href=&quot;#改造&quot; class=&quot;headerlink&quot; title=&quot;改造&quot;&gt;&lt;/a&gt;改造&lt;/h3&gt;&lt;h4 id=&quot;1-sticky-首页导航栏&quot;&gt;&lt;a href=&quot;#1-sticky-首页导航栏&quot; class=&quot;headerlink&quot; title=&quot;1. sticky 首页导航栏&quot;&gt;&lt;/a&gt;1. &lt;code&gt;sticky&lt;/code&gt; 首页导航栏&lt;/h4&gt;&lt;p&gt;position:sticky 这好像是 CSS 里一个比较新的特性，以前做吸顶都是用的 position:fixed。我照着 &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/css-position-sticky&quot;&gt;css-position-sticky&lt;/a&gt; 这个教程把几个属性放到 sidebar 和 main 上面去就可以了。原理并没有特意去弄明白它….&lt;/p&gt;
&lt;h4 id=&quot;2-优化黑暗模式的处理方式&quot;&gt;&lt;a href=&quot;#2-优化黑暗模式的处理方式&quot; class=&quot;headerlink&quot; title=&quot;2. 优化黑暗模式的处理方式&quot;&gt;&lt;/a&gt;2. 优化黑暗模式的处理方式&lt;/h4&gt;&lt;p&gt;搜了一些黑暗模式的&lt;a href=&quot;https://css-tricks.com/a-complete-guide-to-dark-mode-on-the-web/&quot;&gt;处理&lt;/a&gt;，挺有趣的。还发现了一个网站 &lt;a href=&quot;https://refactoringui.com/&quot;&gt;https://refactoringui.com&lt;/a&gt; 好像很不错… 有空要系统性地学习一下 UI&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/05/28/polish-hexo-theme/20220531-140815.jpg&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;3-优化代码块的样式&quot;&gt;&lt;a href=&quot;#3-优化代码块的样式&quot; class=&quot;headerlink&quot; title=&quot;3. 优化代码块的样式&quot;&gt;&lt;/a&gt;3. 优化代码块的样式&lt;/h4&gt;&lt;h4 id=&quot;4-About-Me&quot;&gt;&lt;a href=&quot;#4-About-Me&quot; class=&quot;headerlink&quot; title=&quot;4. About Me&quot;&gt;&lt;/a&gt;4. About Me&lt;/h4&gt;&lt;h4 id=&quot;5-全局搜索&quot;&gt;&lt;a href=&quot;#5-全局搜索&quot; class=&quot;headerlink&quot; title=&quot;5. 全局搜索&quot;&gt;&lt;/a&gt;5.</summary>
        
      
    
    
    
    
    <category term="前端" scheme="http://r.piggy.lol/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="设计" scheme="http://r.piggy.lol/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>“中文已死”讨论下回忆我受到的语文教育</title>
    <link href="http://r.piggy.lol/2022/05/22/chinese-education/"/>
    <id>http://r.piggy.lol/2022/05/22/chinese-education/</id>
    <published>2022-05-22T05:28:29.000Z</published>
    <updated>2024-08-06T16:09:37.253Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h3&gt;&lt;p&gt;大学时有个老师讲话特别抽象，那是对自己语言的精准度和凝练度的高标准下长年锻炼而成的，因此像课本一样多术语，旁征博引。有时我觉得自己的文字也挺抽象，但这是对名词与形容词不熟悉而随意组合滥用的结果，由于不喜欢和现有已存在的句子发生大量冲撞，就用自己的感觉去重组它们，假以高考语文的标准来要求的话，错句频出，但我挺喜欢那种乱乱的感觉，仿佛能看到一颗心在背后飞扬。&lt;/p&gt;
&lt;p&gt;时常很痛心于我所受到的语文教育，这门大量阅读输入的课程是在政治课破败历史课虚伪的背景下尚存教人良知的课程，也痛心自己没能摸索出一条在应试背景下适合自己的语文学习道路，最后的结果很别扭，一边厌学一边无知地背诵答题套路，一边充满表达欲一边笔下文字枯槁干涸。根源上讲是我严肃阅读不足，不具备思考事件发生的表象与深层原因的能力，其次是害怕看上去太过认真或预感答案错误而不敢有价值观表达，再次是觉得谁都说得对恐于与人或事冲突对峙，导致写起作文来假大空，早早学会了臣服，不然高中那些题目实则怪不到应试体制上。&lt;/p&gt;
&lt;h3 id=&quot;2&quot;&gt;&lt;a href=&quot;#2&quot; class=&quot;headerlink&quot; title=&quot;2&quot;&gt;&lt;/a&gt;2&lt;/h3&gt;&lt;p&gt;很早就意识到我的语文教育已死了，也很早就体会到语文这门课程，在不具备自主阅读习惯的学生群体里育人的重要性，学语文，就是在学做人，就是在了解时空跨越之下的不同人的经历，原来有那么多相似的情绪。语文教人的写作是在一个木讷的国度里动员人们去抗争的最好武器。可是我不足以幸运遇到一个对语文充满爱、社会责任感强的语文老师，也不够机智在这镣铐下舞蹈，至今我回忆语文课全都是套路话的模板，说一不二我时常不能理解的参考答案。大学图书馆里的阅读时间是我对自己的复健。最近各种事情交织下情绪很敏感很适合写作，常有奇思妙想写起来如流水，最难得的是自己不觉得油腻。快乐的我只会写出傻乎乎的文字，字里行间打满感叹号，傻到浑身冒泡泡。我想如果让现在的我回去写作文，至少在叙事类我能写得更好，毕竟结尾会上升得比较真诚自然，我不会再说违心话了，但议论文依然会很差，严肃文学之短板，我并没有感受到这方面的成长。&lt;/p&gt;
&lt;p&gt;虽然很不愿意承认，死记硬背确实在帮助人感知语文的内涵这方面起了一定作用，齐声朗读“今当远离，临表涕零，不知所言”，穿越时空去想象去体验时，我想很多人的心都会因此变得柔软。懵懂时对人生的憧憬也在某个晨读的朗朗声里被埋下火种了，无论走得多选，在哪里看雪，会尽可能去尝试偶遇湖心亭那个“痴似相公者”的人。&lt;/p&gt;
&lt;h3 id=&quot;3&quot;&gt;&lt;a href=&quot;#3&quot; class=&quot;headerlink&quot; title=&quot;3&quot;&gt;&lt;/a&gt;3&lt;/h3&gt;&lt;p&gt;（真的很厌恶排比句但还是用了，真虚伪啊。太多“我感觉”了，什么时候能理智自信一点，而且好唠叨哦，词语不精炼，词汇量太少。</summary>
        
      
    
    
    
    
    <category term="碎碎念" scheme="http://r.piggy.lol/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>为什么我在 2021 年什么都没有写啊</title>
    <link href="http://r.piggy.lol/2021/03/03/why-i-didnt-write-in-2021/"/>
    <id>http://r.piggy.lol/2021/03/03/why-i-didnt-write-in-2021/</id>
    <published>2021-03-02T16:00:00.000Z</published>
    <updated>2024-08-06T16:09:37.270Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;只是为了看到一连串连续的数字而已。&lt;/p&gt;
&lt;p&gt;本人在 2021</summary>
        
      
    
    
    
    
    <category term="碎碎念" scheme="http://r.piggy.lol/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>KLEE 符号执行基础使用</title>
    <link href="http://r.piggy.lol/2020/06/02/klee/"/>
    <id>http://r.piggy.lol/2020/06/02/klee/</id>
    <published>2020-06-02T12:55:25.000Z</published>
    <updated>2024-08-06T16:09:37.265Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;!-- 我在 /klee/ 下放了嵌套文件夹，hexo 就无法 generate 了。非常奇怪。 --&gt;

&lt;h2 id=&quot;Turorial-2&quot;&gt;&lt;a href=&quot;#Turorial-2&quot; class=&quot;headerlink&quot; title=&quot;Turorial 2&quot;&gt;&lt;/a&gt;Turorial 2&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 新建对应 examples/Regexp.c 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 编译&lt;/span&gt;&lt;br&gt;clang -emit-llvm -c -g -O0 -Xclang -disable-O0-optnone Regexp.c&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 我的 KLEE 环境已经配好了因此不需要 -I ../../include 来寻找头文件&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# -c 将代码编译到目标文件（而不是本机可执行文件）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# -g 导致其他调试信息存储在目标文件中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# -O0 -Xclang -disable-O0-optnone 编译不进行任何优化，但不阻止 KLEE 进行自身的优化 （？&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 验证是否成功&lt;/span&gt;&lt;br&gt;llvm-nm Regexp.bc&lt;br&gt;                 U klee_make_symbolic&lt;br&gt;---------------- T main&lt;br&gt;---------------- T match&lt;br&gt;---------------- t matchhere&lt;br&gt;---------------- t matchstar&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 符号执行&lt;/span&gt;&lt;br&gt;klee --only-output-states-covering-new Regexp.bc&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#KLEE将使用第一个空闲的klee-out-N目录，并创建一个klee-last符号链接指向最新创建的目录&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# --only-output-states-covering-new 只生成覆盖新代码的状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 如不介意错误案例的重复，使用--emit-all-errors&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/2020/06/02/klee/tu2.jpg&quot; alt=&quot;klee/tu2.jpg&quot;&gt;&lt;br&gt;KLEE 错误类型包括:&lt;/p&gt;
&lt;figure class=&quot;highlight pgsql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs pgsql&quot;&gt;ptr: Stores &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; loads &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; invalid memory locations.&lt;br&gt;free: &lt;span class=&quot;hljs-type&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; invalid free().&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;abort&lt;/span&gt;: The program &lt;span class=&quot;hljs-keyword&quot;&gt;called&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;abort&lt;/span&gt;().&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;assert&lt;/span&gt;: An &lt;span class=&quot;hljs-keyword&quot;&gt;assertion&lt;/span&gt; failed.&lt;br&gt;div: A division &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; modulus &lt;span class=&quot;hljs-keyword&quot;&gt;by&lt;/span&gt; zero was detected.&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;user&lt;/span&gt;: There &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; a problem &lt;span class=&quot;hljs-keyword&quot;&gt;with&lt;/span&gt; the &lt;span class=&quot;hljs-keyword&quot;&gt;input&lt;/span&gt; (invalid klee intrinsic calls) &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; the way KLEE &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; being used.&lt;br&gt;exec: There was a problem which prevented KLEE &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; executing the program; &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; example an &lt;span class=&quot;hljs-type&quot;&gt;unknown&lt;/span&gt; instruction, a &lt;span class=&quot;hljs-keyword&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; an invalid &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; pointer, &lt;span class=&quot;hljs-keyword&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;inline&lt;/span&gt; assembly.&lt;br&gt;model: KLEE was unable &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; keep &lt;span class=&quot;hljs-keyword&quot;&gt;full&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;precision&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;only&lt;/span&gt; exploring parts &lt;span class=&quot;hljs-keyword&quot;&gt;of&lt;/span&gt; the program state. &lt;span class=&quot;hljs-keyword&quot;&gt;For&lt;/span&gt; example, symbolic sizes &lt;span class=&quot;hljs-keyword&quot;&gt;to&lt;/span&gt; malloc are &lt;span class=&quot;hljs-keyword&quot;&gt;not&lt;/span&gt; currently supported, &lt;span class=&quot;hljs-keyword&quot;&gt;in&lt;/span&gt; such cases KLEE will concretize the argument.&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/2020/06/02/klee/tu2_error.jpg&quot; alt=&quot;klee/tu2_error.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;KLEE 指出在 line23 发生了指针越界错误。&lt;br&gt;仔细分析源码可知，在主函数中&lt;code&gt;re&lt;/code&gt;数组存储字符串初始化时并未用&lt;code&gt;/0&lt;/code&gt;来表示字符串的结束。因此修改源码如下防止越界：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &amp;#123;&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// The input regular expression.&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; re[SIZE];&lt;br&gt;&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// Make the input symbolic.&lt;/span&gt;&lt;br&gt;  klee_make_symbolic(re, &lt;span class=&quot;hljs-keyword&quot;&gt;sizeof&lt;/span&gt; re, &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;re&amp;quot;&lt;/span&gt;);&lt;br&gt;  re[SIZE - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;&#92;0&amp;#x27;&lt;/span&gt;;&lt;br&gt;&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// Try to match against a constant string &amp;quot;hello&amp;quot;.&lt;/span&gt;&lt;br&gt;  match(re, &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;或者使用&lt;code&gt;klee_assume&lt;/code&gt;函数:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;klee_assume&lt;/code&gt;接受一个参数(一个无符号整数)，该参数通常应该是某种条件表达式，并且“假定”该表达式为真&lt;/p&gt;
&lt;p&gt;如果这种情况永远不会发生，即该表达式可证明为假，那么 KLEE 将报告错误&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs c&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt; &amp;#123;&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// The input regular expression.&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; re[SIZE];&lt;br&gt;&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// Make the input symbolic.&lt;/span&gt;&lt;br&gt;  klee_make_symbolic(re, &lt;span class=&quot;hljs-keyword&quot;&gt;sizeof&lt;/span&gt; re, &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;re&amp;quot;&lt;/span&gt;);&lt;br&gt;  klee_assume(re[SIZE - &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;&#92;0&amp;#x27;&lt;/span&gt;);&lt;br&gt;&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;// Try to match against a constant string &amp;quot;hello&amp;quot;.&lt;/span&gt;&lt;br&gt;  match(re, &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;修改之后不再报错&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/06/02/klee/tu2_right.jpg&quot; alt=&quot;klee/tu2_right.jpg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Turorial-3&quot;&gt;&lt;a href=&quot;#Turorial-3&quot; class=&quot;headerlink&quot; title=&quot;Turorial 3&quot;&gt;&lt;/a&gt;Turorial 3&lt;/h2&gt;&lt;p&gt;这是一个迷宫小游戏，根据 KLEE 工具我们可以直接找到正确和错误的路径。&lt;/p&gt;
&lt;p&gt;首先将源码中的&lt;code&gt;read(0,program,ITERS);&lt;/code&gt;替换为&lt;code&gt;klee_make_symbolic(program,ITERS,&amp;quot;program&amp;quot;);&lt;/code&gt;，再添加 klee 头文件&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;klee_assert()&lt;/code&gt;函数，与 C 断言相同，它强制一个条件为真，否则将中止执行。将该函数添加到&lt;code&gt;printf (&amp;quot;You win!&#92;n&amp;quot;);&lt;/code&gt;所在行，这样将被 KLEE 标记为一个错误的测试用例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/06/02/klee/t3_err.jpg&quot; alt=&quot;klee/t3_err.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以&lt;code&gt;ktest-tool klee-last/test000138.ktest&lt;/code&gt;查看抵达&lt;code&gt;#&lt;/code&gt;的测试用例输入&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/06/02/klee/t3_win.jpg&quot; alt=&quot;klee/t3_win.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;可发现这是一个特殊解，迷宫有&lt;code&gt;假墙&lt;/code&gt;，KLEE 并没有给出所有的解决方案：添加&lt;code&gt;–emit-all-errors&lt;/code&gt;列出，结果显示有四种 solutions:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;tutorial3 % for f in $(ls klee-last/ |grep  err); do ktest-tool &amp;quot;klee-last/$&amp;#123;f:0:10&amp;#125;.ktest&amp;quot;; done |grep text&lt;br&gt;object 0: text: sddwddddsddwssssssssssssssss&lt;br&gt;object 0: text: ssssddddwwaawwddddsddwssssss&lt;br&gt;object 0: text: sddwddddssssddwwwwssssssssss&lt;br&gt;object 0: text: ssssddddwwaawwddddssssddwwww&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;Turorial-4-Keygenning-with-KLEE-and-Hex-Rays&quot;&gt;&lt;a href=&quot;#Turorial-4-Keygenning-with-KLEE-and-Hex-Rays&quot; class=&quot;headerlink&quot; title=&quot;Turorial 4 Keygenning with KLEE and Hex-Rays&quot;&gt;&lt;/a&gt;Turorial 4 Keygenning with KLEE and Hex-Rays&lt;/h2&gt;&lt;p&gt;目的是破解密钥，首先将该 bin 文件使用 ghidra 反编译 main 函数如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs c&quot;&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// WARNING: [r2ghidra] Failed to match type signed int64_t for variable var_ch to Decompiler type: Unknown type&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// identifier signed&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// WARNING: [r2ghidra] Detected overlap for variable var_8h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// WARNING: [r2ghidra] Failed to match type size_t for variable var_4h to Decompiler type: Unknown type identifier&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// size_t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// WARNING: [r2ghidra] Detected overlap for variable var_4h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;// WARNING: [r2ghidra] Detected overlap for variable ptr&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;uint32_t&lt;/span&gt; argc, &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; **argv)&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; cVar1;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; cVar2;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; cVar3;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; cVar4;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; cVar5;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;int64_t&lt;/span&gt; iVar6;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; **s;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;uint32_t&lt;/span&gt; var_24h;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;uint32_t&lt;/span&gt; var_14h;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (argc == &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;br&gt;        iVar6 = &lt;span class=&quot;hljs-built_in&quot;&gt;strlen&lt;/span&gt;(argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);&lt;br&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (((iVar6 + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) * &lt;span class=&quot;hljs-number&quot;&gt;0x2a&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0x1f8&lt;/span&gt;) &amp;amp;&amp;amp;&lt;br&gt;           (cVar1 = *argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], cVar2 = argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], cVar3 = *argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], cVar4 = argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;], cVar5 = argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;],&lt;br&gt;           iVar6 = &lt;span class=&quot;hljs-built_in&quot;&gt;strlen&lt;/span&gt;(argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]),&lt;br&gt;           (&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;] - (&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;] == &lt;span class=&quot;hljs-number&quot;&gt;0xd&lt;/span&gt; &amp;amp;&amp;amp;&lt;br&gt;           ((&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;] - (&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;hljs-number&quot;&gt;0xd&lt;/span&gt; &amp;amp;&amp;amp;&lt;br&gt;           (argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;i&amp;#x27;&lt;/span&gt; &amp;amp;&amp;amp;&lt;br&gt;           (argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;] == argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;] &amp;amp;&amp;amp;&lt;br&gt;           (argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] + &lt;span class=&quot;hljs-number&quot;&gt;-0x11&lt;/span&gt; == (&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)*argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] &amp;amp;&amp;amp;&lt;br&gt;           (argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] == argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;] &amp;amp;&amp;amp;&lt;br&gt;           (argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] == argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;] &amp;amp;&amp;amp;&lt;br&gt;           ((&lt;span class=&quot;hljs-type&quot;&gt;int64_t&lt;/span&gt;)cVar5 == iVar6 * &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; + &lt;span class=&quot;hljs-number&quot;&gt;-4&lt;/span&gt; &amp;amp;&amp;amp;&lt;br&gt;           (cVar3 + &lt;span class=&quot;hljs-number&quot;&gt;0x10&lt;/span&gt; == cVar4 + &lt;span class=&quot;hljs-number&quot;&gt;-0x10&lt;/span&gt; &amp;amp;&amp;amp; (((&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)cVar2 &amp;amp; &lt;span class=&quot;hljs-number&quot;&gt;0x7fffffff&lt;/span&gt;U) == &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; &amp;amp;&amp;amp; cVar1 == &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;P&amp;#x27;&lt;/span&gt;))))))))))) &amp;#123;&lt;br&gt;            fcn&lt;span class=&quot;hljs-number&quot;&gt;.0040064&lt;/span&gt;d(argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);&lt;br&gt;        &amp;#125; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&quot;hljs-built_in&quot;&gt;fprintf&lt;/span&gt;(_reloc.&lt;span class=&quot;hljs-built_in&quot;&gt;stdout&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Try again...&#92;n&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&quot;hljs-built_in&quot;&gt;fprintf&lt;/span&gt;(_reloc.&lt;span class=&quot;hljs-built_in&quot;&gt;stdout&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Usage: %s &amp;lt;pass&amp;gt;&#92;n&amp;quot;&lt;/span&gt;, *argv);&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以看出，逻辑是接收一个字符串，并且要满足相当多的条件之后，可调用&lt;code&gt;0040064d&lt;/code&gt;函数，否则将会打印&lt;code&gt;Try again&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我们也可以一个条件一个条件满足进行破解，但使用 KLEE 符号注入会简洁很多：&lt;br&gt;将原函数添加如下修改：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加文件头，使能执行&lt;/li&gt;
&lt;li&gt;有错误的地方按报错进行修改&lt;/li&gt;
&lt;li&gt;注释&lt;code&gt;0040064d&lt;/code&gt;函数，添加&lt;code&gt;klee_assert(0);&lt;/code&gt;生成 err&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs c&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;assert.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;klee/klee.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; **argv)&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; cVar1;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; cVar2;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; cVar3;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; cVar4;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; cVar5;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;int64_t&lt;/span&gt; iVar6;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; **s;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;uint32_t&lt;/span&gt; var_24h;&lt;br&gt;    &lt;span class=&quot;hljs-type&quot;&gt;uint32_t&lt;/span&gt; var_14h;&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (argc == &lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;br&gt;        iVar6 = &lt;span class=&quot;hljs-built_in&quot;&gt;strlen&lt;/span&gt;(argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]);&lt;br&gt;        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (((iVar6 + &lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;) * &lt;span class=&quot;hljs-number&quot;&gt;0x2a&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot;&gt;0x1f8&lt;/span&gt;) &amp;amp;&amp;amp;&lt;br&gt;           (cVar1 = *argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], cVar2 = argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;], cVar3 = *argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;], cVar4 = argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;6&lt;/span&gt;], cVar5 = argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;],&lt;br&gt;           iVar6 = &lt;span class=&quot;hljs-built_in&quot;&gt;strlen&lt;/span&gt;(argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;]),&lt;br&gt;           (&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;8&lt;/span&gt;] - (&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;] == &lt;span class=&quot;hljs-number&quot;&gt;0xd&lt;/span&gt; &amp;amp;&amp;amp;&lt;br&gt;           ((&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;2&lt;/span&gt;] - (&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;hljs-number&quot;&gt;0xd&lt;/span&gt; &amp;amp;&amp;amp;&lt;br&gt;           (argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;] == &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;i&amp;#x27;&lt;/span&gt; &amp;amp;&amp;amp;&lt;br&gt;           (argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;] == argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt;] &amp;amp;&amp;amp;&lt;br&gt;           (argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] + &lt;span class=&quot;hljs-number&quot;&gt;-0x11&lt;/span&gt; == (&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)*argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] &amp;amp;&amp;amp;&lt;br&gt;           (argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] == argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;10&lt;/span&gt;] &amp;amp;&amp;amp;&lt;br&gt;           (argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;] == argv[&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;hljs-number&quot;&gt;7&lt;/span&gt;] &amp;amp;&amp;amp;&lt;br&gt;           ((&lt;span class=&quot;hljs-type&quot;&gt;int64_t&lt;/span&gt;)cVar5 == iVar6 * &lt;span class=&quot;hljs-number&quot;&gt;9&lt;/span&gt; + &lt;span class=&quot;hljs-number&quot;&gt;-4&lt;/span&gt; &amp;amp;&amp;amp;&lt;br&gt;           (cVar3 + &lt;span class=&quot;hljs-number&quot;&gt;0x10&lt;/span&gt; == cVar4 + &lt;span class=&quot;hljs-number&quot;&gt;-0x10&lt;/span&gt; &amp;amp;&amp;amp; (((&lt;span class=&quot;hljs-type&quot;&gt;int32_t&lt;/span&gt;)cVar2 &amp;amp; &lt;span class=&quot;hljs-number&quot;&gt;0x7fffffff&lt;/span&gt;U) == &lt;span class=&quot;hljs-number&quot;&gt;100&lt;/span&gt; &amp;amp;&amp;amp; cVar1 == &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;P&amp;#x27;&lt;/span&gt;))))))))))) &amp;#123;&lt;br&gt;            &lt;span class=&quot;hljs-comment&quot;&gt;// fcn.0040064d(argv[1]);&lt;/span&gt;&lt;br&gt;            klee_assert(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;);&lt;br&gt;            &lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;You find it&#92;n&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;br&gt;&lt;br&gt;        &amp;#125; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;br&gt;            &lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Try again...&#92;n&amp;quot;&lt;/span&gt;);&lt;br&gt;        &amp;#125;&lt;br&gt;    &amp;#125; &lt;span class=&quot;hljs-keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;br&gt;        &lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;Usage: %s &amp;lt;pass&amp;gt;&#92;n&amp;quot;&lt;/span&gt;, *argv);&lt;br&gt;    &amp;#125;&lt;br&gt;    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;开始编译&lt;/p&gt;
&lt;p&gt;&lt;code&gt;clang -emit-llvm -g -o main.ll -c main.c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;klee --optimize --libc=uclibc --posix-runtime main.ll --sym-arg 100&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;X:Matryoshka-Stage-2:% &lt;span class=&quot;hljs-built_in&quot;&gt;ls&lt;/span&gt; klee-last/*err&lt;br&gt;klee-last/test000029.assert.err&lt;br&gt;X:Matryoshka-Stage-2:% ktest-tool klee-last/test000029.ktest&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果如图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/06/02/klee/tu4_err.jpg&quot; alt=&quot;klee/tu4_err.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;输入正确的字符串&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/06/02/klee/t4_good.jpg&quot;</summary>
        
      
    
    
    
    
    <category term="信息安全" scheme="http://r.piggy.lol/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Fuzz 实验 - 使用 AFL 对 binutils 进行模糊测试</title>
    <link href="http://r.piggy.lol/2020/05/13/fuzz/"/>
    <id>http://r.piggy.lol/2020/05/13/fuzz/</id>
    <published>2020-05-13T10:25:11.000Z</published>
    <updated>2024-08-06T16:09:37.259Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;实验内容&quot;&gt;&lt;a href=&quot;#实验内容&quot; class=&quot;headerlink&quot; title=&quot;实验内容&quot;&gt;&lt;/a&gt;实验内容&lt;/h2&gt;&lt;p&gt;在核心 Linux 实用程序中查找错误，使用 AFL 对 GNU binutils 工具集进行模糊测试&lt;/p&gt;
&lt;h2 id=&quot;实验工具&quot;&gt;&lt;a href=&quot;#实验工具&quot; class=&quot;headerlink&quot; title=&quot;实验工具&quot;&gt;&lt;/a&gt;实验工具&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;AFL(&lt;a href=&quot;https://github.com/google/AFL/&quot;&gt;American Fuzzy Lop&lt;/a&gt;)是由安全研究员 Micha-Zalewski 开发的一款基于覆盖引导（Coverage-guided）的模糊测试工具，它通过记录输入样本的代码覆盖率，从而调整输入样本以提高覆盖率，增加发现漏洞的概率。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实验步骤&quot;&gt;&lt;a href=&quot;#实验步骤&quot; class=&quot;headerlink&quot; title=&quot;实验步骤&quot;&gt;&lt;/a&gt;实验步骤&lt;/h2&gt;&lt;h3 id=&quot;安装-AFL&quot;&gt;&lt;a href=&quot;#安装-AFL&quot; class=&quot;headerlink&quot; title=&quot;安装 AFL&quot;&gt;&lt;/a&gt;安装 AFL&lt;/h3&gt;&lt;p&gt;从官网下载最新版的源码（latest version），解压后进入所在目录。&lt;br&gt;执行以下命令进行编译和安装：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;make&lt;br&gt;sudo make install&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;下载测试用例&quot;&gt;&lt;a href=&quot;#下载测试用例&quot; class=&quot;headerlink&quot; title=&quot;下载测试用例&quot;&gt;&lt;/a&gt;下载测试用例&lt;/h3&gt;&lt;p&gt;CVE 中可以看到 gnu binutils 层出不穷。&lt;/p&gt;
&lt;p&gt;binutils 对于 AFL 入门非常有用，因为它很简单、易设置，是一个值得摸索的目标。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/05/13/fuzz/cve.png&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs shell&quot;&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;curl -O &lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;https://mirrors.syringanetworks.net/gnu/binutils/binutils-2.34.tar.xz&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;tar -xvf binutils-2.34.tar.xz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;cd&lt;/span&gt; binutils-2.34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;./configure CFLAGS=&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;-O0&amp;quot;&lt;/span&gt; CC=afl-gcc prefix=&lt;span class=&quot;hljs-variable&quot;&gt;$PWD&lt;/span&gt;/../binutils CXXFLAGS=&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;-O0&amp;quot;&lt;/span&gt; CXX=afl-g++ AFL_PATH=/usr/bin/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta prompt_&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;language-bash&quot;&gt;AFL_PATH=/usr/bin/ make -j16 &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;安装好后，可在当前目录下看到编译好的 binutils：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/05/13/fuzz/binutils.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;选择-seed&quot;&gt;&lt;a href=&quot;#选择-seed&quot; class=&quot;headerlink&quot; title=&quot;选择 seed&quot;&gt;&lt;/a&gt;选择 seed&lt;/h3&gt;&lt;p&gt;注意事项如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;种子文件应该是目标应用程序的有效输入文件。 虽然无效输入有时会产生有趣的错误和崩溃，但有效的输入会更快地找到更多路径。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由于程序处理较小的输入文件通常花费较少的时间，因此种子文件应该很小&amp;lt;1kb，得到每秒更多执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果存在大量代码覆盖或功能重叠，则使用多个种子文件的效率可能会很低。 AFL 包括称为 AFL-cmin 和 AFL-Tmin 的语料库最小化工具，它们将减少多文件种子语料库的大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于常见的文件和数据格式，可使用原始&lt;code&gt;testcase&#92;&lt;/code&gt;目录下的 AFL 包含的种子文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;模糊测试&quot;&gt;&lt;a href=&quot;#模糊测试&quot; class=&quot;headerlink&quot; title=&quot;模糊测试&quot;&gt;&lt;/a&gt;模糊测试&lt;/h3&gt;&lt;p&gt;要避免将崩溃误解为挂起，运行如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;echo core &amp;gt; /proc/sys/kernel/core_pattern&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;开始 Fuzz&lt;/p&gt;
&lt;p&gt;&lt;code&gt;afl-fuzz -i your_testcases -n -o out ./binutils/bin/readelf @@&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img</summary>
        
      
    
    
    
    
    <category term="信息安全" scheme="http://r.piggy.lol/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>常见蜜罐体验和探索</title>
    <link href="http://r.piggy.lol/2020/01/10/0x0b-honey-pot/"/>
    <id>http://r.piggy.lol/2020/01/10/0x0b-honey-pot/</id>
    <published>2020-01-10T05:46:25.000Z</published>
    <updated>2024-08-06T16:09:37.214Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;了解蜜罐的分类和基本原理&lt;/li&gt;
&lt;li&gt;了解不同类型蜜罐的适用场合&lt;/li&gt;
&lt;li&gt;掌握常见蜜罐的搭建和使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实验环境&quot;&gt;&lt;a href=&quot;#实验环境&quot; class=&quot;headerlink&quot; title=&quot;实验环境&quot;&gt;&lt;/a&gt;实验环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;中等交互蜜罐 &lt;code&gt;Cowrie&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实验要求&quot;&gt;&lt;a href=&quot;#实验要求&quot; class=&quot;headerlink&quot; title=&quot;实验要求&quot;&gt;&lt;/a&gt;实验要求&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;记录蜜罐的详细搭建过程；&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;nmap&lt;/code&gt; 扫描搭建好的蜜罐并分析扫描结果，同时分析「 &lt;code&gt;nmap&lt;/code&gt; 扫描期间」蜜罐上记录得到的信息；&lt;/li&gt;
&lt;li&gt;如何辨别当前目标是一个「蜜罐」？以自己搭建的蜜罐为例进行说明；&lt;/li&gt;
&lt;li&gt;（可选）总结常见的蜜罐识别和检测方法；&lt;/li&gt;
&lt;li&gt;（可选）基于 &lt;a href=&quot;https://github.com/thinkst/canarytokens&quot;&gt;canarytokens&lt;/a&gt; 搭建蜜信实验环境进行自由探索型实验；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实验过程&quot;&gt;&lt;a href=&quot;#实验过程&quot; class=&quot;headerlink&quot; title=&quot;实验过程&quot;&gt;&lt;/a&gt;实验过程&lt;/h2&gt;&lt;h3 id=&quot;中等交互蜜罐-Cowrie&quot;&gt;&lt;a href=&quot;#中等交互蜜罐-Cowrie&quot; class=&quot;headerlink&quot; title=&quot;中等交互蜜罐 Cowrie&quot;&gt;&lt;/a&gt;中等交互蜜罐 &lt;code&gt;Cowrie&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;虚拟机信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/kali_v.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;环境搭建-虚拟机网络为-bridge&quot;&gt;&lt;a href=&quot;#环境搭建-虚拟机网络为-bridge&quot; class=&quot;headerlink&quot; title=&quot;环境搭建 (虚拟机网络为 bridge)&quot;&gt;&lt;/a&gt;环境搭建 (虚拟机网络为 bridge)&lt;/h4&gt;&lt;p&gt;照&lt;a href=&quot;https://cowrie.readthedocs.io/en/latest/INSTALL.html&quot;&gt;官方步骤&lt;/a&gt;搭建&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;step 1: On debian based systems,For a Python3 based environment:&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;sudo&lt;/span&gt; apt-get install git python-virtualenv libssl-dev libffi-dev build-essential libpython3-dev python3-minimal authbind virtualenv&lt;br&gt;&lt;br&gt;Step 2: Create a user account&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;sudo&lt;/span&gt; adduser --disabled-password cowrie&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;sudo&lt;/span&gt; su - cowrie&lt;br&gt;&lt;br&gt;Step 3: Clone cowrie&lt;br&gt;&lt;br&gt;git &lt;span class=&quot;hljs-built_in&quot;&gt;clone&lt;/span&gt; http://github.com/cowrie/cowrie&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;cd&lt;/span&gt; cowrie&lt;br&gt;&lt;br&gt;Step 4: Setup Virtual Environment and active it&lt;br&gt;&lt;br&gt;virtualenv --python=python3 cowrie-env&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;source&lt;/span&gt; cowrie-env/bin/activate&lt;br&gt;pip install --upgrade pip&lt;br&gt;pip install --upgrade -r requirements.txt&lt;br&gt;&lt;br&gt;Step 5: Configure cowrie.cfg&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;cd&lt;/span&gt; etc/&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;cp&lt;/span&gt; cowrie.cfg.dist cowrie.cfg&lt;br&gt;vim ./cowrie.cfg &lt;span class=&quot;hljs-comment&quot;&gt;#配置蜜罐主机信息&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# (default: svr04)&lt;/span&gt;&lt;br&gt;hostname = anig04&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#　方便观察log 这里配置下sql&lt;/span&gt;&lt;br&gt;[output_mysql] &lt;span class=&quot;hljs-comment&quot;&gt;#前面默认的注释符要去掉不然 twisted 不会parse了&lt;/span&gt;&lt;br&gt;enabled = &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;&lt;br&gt;host = localhost&lt;br&gt;database = cowrie&lt;br&gt;username = cowrie&lt;br&gt;password = aniglalala&lt;br&gt;port = 3306&lt;br&gt;debug = &lt;span class=&quot;hljs-literal&quot;&gt;false&lt;/span&gt;&lt;br&gt;&lt;br&gt;Step 6: Starting Cowrie&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;cd&lt;/span&gt; ..&lt;br&gt;bin/cowrie start&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/cowrie_start.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;端口重定向&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Make Cowrie accessible on the default SSH port (22)&lt;/p&gt;
&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs awk&quot;&gt;&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;.iptables&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#iptables端口转发属于系统范围，需要作为root身份执行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;exit&lt;/span&gt;&lt;br&gt;sudo iptables -t nat -A PREROUTING -p tcp --dport &lt;span class=&quot;hljs-number&quot;&gt;22&lt;/span&gt; -j REDIRECT --to-port &lt;span class=&quot;hljs-number&quot;&gt;2222&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/iptables.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装 第三方可视化 mysql&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs awk&quot;&gt;＃root 用户下&lt;br&gt;＃官方建议的 mysql-server 被遗弃了这里改成mariadb&lt;br&gt;&lt;br&gt;sudo apt-get install libmariadb-dev&lt;br&gt;su - cowrie&lt;br&gt;source cowrie&lt;span class=&quot;hljs-regexp&quot;&gt;/cowrie-env/&lt;/span&gt;bin/activate&lt;br&gt;pip install mysqlclient&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#开启服务，会被要求输入root用户的密码&lt;/span&gt;&lt;br&gt;systemctl start mariadb&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 默认无密码 直接回车&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 创建用户 cowrie&lt;/span&gt;&lt;br&gt;mysql -u root -p&lt;br&gt;GRANT ALL ON cowrie.* TO cowrie@localhost IDENTIFIED BY &lt;span class=&quot;hljs-string&quot;&gt;&amp;#x27;aniglalala&amp;#x27;&lt;/span&gt;;&lt;br&gt;flush privileges;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;exit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 进入存放sql文件的目录下&lt;/span&gt;&lt;br&gt;cd docs&lt;span class=&quot;hljs-regexp&quot;&gt;/sql/&lt;/span&gt;&lt;br&gt;mysql -u cowrie -p&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 输入自己的密码`aniglalala`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 建表&lt;/span&gt;&lt;br&gt;use cowrie;&lt;br&gt;source ./mysql.sql;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;exit&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结果如下,它们初始均为空&lt;br&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/mysql.png&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs bash&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# 重启服务&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;cd&lt;/span&gt;&lt;br&gt;./cowrie/bin/cowrie restart&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里出了点小插曲就是 &lt;code&gt;#[output_mysql]&lt;/code&gt; 前面的&lt;code&gt;#&lt;/code&gt;没有去掉，发现重启失败&lt;/p&gt;
&lt;p&gt;报错信息为&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/already.png&quot;&gt;&lt;br&gt;也就是 &lt;code&gt;[output_jsonlog]&lt;/code&gt; 字段&lt;code&gt;enabled&lt;/code&gt;重复&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs stata&quot;&gt;#验证mysql服务开启&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;cat&lt;/span&gt; ./cowrie/&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;hljs-keyword&quot;&gt;log&lt;/span&gt;/cowrie/cowrie.&lt;span class=&quot;hljs-keyword&quot;&gt;log&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以看到 cowrie 加载到 mysql 服务已经启动&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/sql.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;模拟攻击-amp-观察&quot;&gt;&lt;a href=&quot;#模拟攻击-amp-观察&quot; class=&quot;headerlink&quot; title=&quot;模拟攻击&amp;amp;观察&quot;&gt;&lt;/a&gt;模拟攻击&amp;amp;观察&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;网络拓扑 host only(1.测试安全 2.减少包流量方便观察)&lt;ul&gt;
&lt;li&gt;Attacker &lt;code&gt;192.168.56.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;HoneyPot &lt;code&gt;192.168.56.109&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;nmap&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;攻击者方结果&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-sN; -sF; -sX&lt;/code&gt;结果一致&lt;br&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/fxn.png&quot;&gt;&lt;br&gt;分析：根据 nmap 判定端口状态的规则:根据 RFC 中对端口判定的漏洞，当发送不含 SYN, RST, or ACK 标志的包时，如果目标端口关闭，将返回 RST，如果端口打开则无响应。若目标系统存在该漏洞则会暴露端口状态。iptables 设置端口 22 重定向至 2222 之后,由于&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The key advantage to these scan types is that they can sneak through certain non-stateful firewalls and packet filtering routers. Such firewalls try to prevent incoming TCP connections (while allowing outbound ones) by blocking any TCP packets with the SYN bit set and ACK cleared.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;sN,sF,sX&lt;/code&gt;扫描类型的包穿透了防火墙的过滤,因此关闭的 22 端口会直接返回 RST 包,而正常开放的 2222 端口不会有任何响应,与nmap判定结果相符&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/nmap_sN.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-sS&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo nmap 192.168.56.109 -sS --max-retries 0 -p 22,2222&lt;/code&gt; 结果如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/2222-filtered.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;分析：该类型包到达端口 22 被防火墙转发至 2222 后有相应返回的 ACK 包,会被 nmap 确认为端口开放,由于&lt;code&gt;--max-retries 0&lt;/code&gt;如果则在端口上只发送一次数据包，不会进行重试。可以看到 22 端口在返回一个正确 ACK 包之后又返回了一个被 wireshark 认为是&lt;code&gt;Out-Of-Order&lt;/code&gt;(经多次测试均是此结果),&lt;strong&gt;本来应该是 2222 返回的包为什么会被 22 端口来返回呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/nmap_sS_max0.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo nmap 192.168.56.109 -sS --max-retries 0 -p 22,2222 -T2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当修改&lt;code&gt;timing mode&lt;/code&gt;为 T2 以较为轻柔的方式来扫描时,可以得到两端口均开放的结果如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/T2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;一个猜测是在 port A 被&lt;code&gt;redirect&lt;/code&gt;至 port B 设置下,&lt;em&gt;一定时间&lt;/em&gt;内&lt;code&gt;iptables&lt;/code&gt;会无脑将 port B 返回的包转发至 port A 作为出口,待查证&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/T2_Sneaky.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;sudo nmap 192.168.56.109 -sS --max-retries 0 -p 22,2221&lt;/code&gt;结果如下:&lt;br&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/2221.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;分析:当然,正常开放另一个端口可以得到相同结果,&lt;code&gt;nc -tlp 2221&lt;/code&gt;开启一个端口&lt;code&gt;2221&lt;/code&gt;,可以在下图看到 22 和 2221 端口均正常返回 ACK&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/22_2221.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;将&lt;code&gt;--max-retries&lt;/code&gt;改为大于 0 的数值或者去掉该参数(默认&amp;gt;0)之后与&lt;code&gt;-sT&lt;/code&gt;扫描结果一致&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;-sT&lt;/code&gt;&lt;br&gt;当采用此种扫描方式时,不管是设置 max-retry 为 0,还是修改 timing mode 使更粗暴,得到的结果均一致:22 和 2222 端口开放&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/sT_max0.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;此结果让上面的推测不太站得住脚,因为两端口均正常建立了连接:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/tcp_connect.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;它和上面 -sS –max-retries 0 扫描产生差异结果原因？&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;蜜罐方结果&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs nginx&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# (不完全测试)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;# nmap只有以下类型可在cowrie查看到记录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;nmap&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;192.168.56.109&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;# 默认 TCP connect() scan&lt;/span&gt;&lt;br&gt;sudo nmap &lt;span class=&quot;hljs-number&quot;&gt;192.168.56.109&lt;/span&gt; -sR &lt;span class=&quot;hljs-comment&quot;&gt;#RPC scan alias for -sV&lt;/span&gt;&lt;br&gt;sudo nmap &lt;span class=&quot;hljs-number&quot;&gt;192.168.56.109&lt;/span&gt; -sT &lt;span class=&quot;hljs-comment&quot;&gt;#与上面的(non sudo)nmap一致&lt;/span&gt;&lt;br&gt;sudo nmap &lt;span class=&quot;hljs-number&quot;&gt;192.168.56.109&lt;/span&gt; -sV &lt;span class=&quot;hljs-comment&quot;&gt;#version detect&lt;/span&gt;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;记录如下：&lt;br&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/nmap.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;只有完成三次握手类型得到了记录,与 session 一词隐含的“连接”意义相符。猜想&lt;code&gt;cowrie&lt;/code&gt;使用的库判断一次 session 较为严格:调用了系统调用 &lt;code&gt;connect&lt;/code&gt; 才会被记录(需要操作系统底层的知识还没来得及学)&lt;/p&gt;
&lt;p&gt;这个追根溯源得&lt;code&gt;twisted.python.syslog&lt;/code&gt;再更底层去,暂停先 &amp;#x2F;&amp;#x2F;todo&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ssh&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs nginx&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;#因为没有配置userdb所以这里输入任何密码都能直接登录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-attribute&quot;&gt;ssh&lt;/span&gt; root@&lt;span class=&quot;hljs-number&quot;&gt;192.168.56.109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-variable&quot;&gt;$anything&lt;/span&gt; you like&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;ssh 时测试的记录可在&lt;code&gt;auth&lt;/code&gt;表中查看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/sshtest.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;tty 输入的记录可在&lt;code&gt;input&lt;/code&gt;表查看：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/input.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;辨别蜜罐&quot;&gt;&lt;a href=&quot;#辨别蜜罐&quot; class=&quot;headerlink&quot; title=&quot;辨别蜜罐&quot;&gt;&lt;/a&gt;辨别蜜罐&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;易突破&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如上面未配置用户密码的情况下,过于容易就成功ssh,采用一些低安全性密码即可怀疑是否进入了蜜罐&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;信息失真&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ping&lt;/p&gt;
&lt;p&gt;如图,两次ping的结果时间差一致&lt;/p&gt;
&lt;p&gt;  &lt;img src=&quot;/2020/01/10/0x0b-honey-pot/ping.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;apt-get&lt;br&gt;一个显然不存在的包成功install&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/01/10/0x0b-honey-pot/aptget.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;reference&quot;&gt;&lt;a href=&quot;#reference&quot; class=&quot;headerlink&quot; title=&quot;reference&quot;&gt;&lt;/a&gt;reference&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a</summary>
        
      
    
    
    
    
    <category term="信息安全" scheme="http://r.piggy.lol/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    <category term="蜜罐" scheme="http://r.piggy.lol/tags/%E8%9C%9C%E7%BD%90/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统进程与线程生命周期</title>
    <link href="http://r.piggy.lol/2019/11/13/ThreadAndProcess-2019-11-13/"/>
    <id>http://r.piggy.lol/2019/11/13/ThreadAndProcess-2019-11-13/</id>
    <published>2019-11-12T16:00:00.000Z</published>
    <updated>2024-08-06T16:09:37.248Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;Basic&quot;&gt;&lt;a href=&quot;#Basic&quot; class=&quot;headerlink&quot; title=&quot;Basic&quot;&gt;&lt;/a&gt;Basic&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;进程是系统分配资源的最小单位&lt;/li&gt;
&lt;li&gt;线程是处理机调度的最小单位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linux 系统中，&lt;code&gt;进程&lt;/code&gt;与&lt;code&gt;线程&lt;/code&gt;的不像在 Windows 中特别区分，线程仅仅被视为一个与其他线程共享某些资源的进程，它们都被称之为&lt;code&gt;Task&lt;/code&gt;（kernel data structure: task_struct）。下面从 Linux 系统中基本函数 &lt;code&gt;exec()&lt;/code&gt;,&lt;code&gt;fork()&lt;/code&gt;,&lt;code&gt;wait()&lt;/code&gt;来分析 Linux 系统的进程管理，从 POSIX 标准分析线程管理。&lt;/p&gt;
&lt;h3 id=&quot;Process&quot;&gt;&lt;a href=&quot;#Process&quot; class=&quot;headerlink&quot; title=&quot;Process&quot;&gt;&lt;/a&gt;Process&lt;/h3&gt;&lt;p&gt;进程创建：类 Unix 系统把进程创建分解到两个单独的函数执行：fork()和 exec()&lt;/p&gt;
&lt;h4 id=&quot;exec&quot;&gt;&lt;a href=&quot;#exec&quot; class=&quot;headerlink&quot; title=&quot;exec()&quot;&gt;&lt;/a&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;读取可执行文件并将其载入地址空间运行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;man 3 exec&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;fork&quot;&gt;&lt;a href=&quot;#fork&quot; class=&quot;headerlink&quot; title=&quot;fork()&quot;&gt;&lt;/a&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;在类 Unix 系统中，除内核进程(?)、init 进程(PID&amp;#x3D;1)以外，新进程都衍自系统调用&lt;code&gt;fork()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;fork 函数很特别，返回两次，分别给父子进程返回 子进程的 PID 和 0， 若出现以下情况：① 系统限制&lt;code&gt;/proc/sys/kernel/pid_max&lt;/code&gt; ② 内存&amp;#x2F;资源不足，则会 fork 失败返回-1。一旦父进程退出，子进程就被挂到 PID 1 下，所以可以看到很多父进程 PID 为 1 的进程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;COW(写时拷贝)&lt;ul&gt;
&lt;li&gt;资源的复制只有在需要写入的时候才允许，在此之前以只读方式共享&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下是偷来的一个很助于理解该函数的&lt;a href=&quot;https://stackoverflow.com/questions/26793402/visually-what-happens-to-fork-in-a-for-loop&quot;&gt;例子&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs C&quot;&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;()&lt;/span&gt;&lt;br&gt;&amp;#123;&lt;br&gt;   &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; i;&lt;br&gt;   &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt; (i=&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;;i++)&lt;br&gt;   &amp;#123;&lt;br&gt;      fork();&lt;br&gt;      &lt;span class=&quot;hljs-comment&quot;&gt;// getppid(): gets the parent process-id&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-comment&quot;&gt;// getpid(): get child process-id&lt;/span&gt;&lt;br&gt;      &lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;[%d] [%d] i=%d&#92;n&amp;quot;&lt;/span&gt;, getppid(), getpid(), i);&lt;br&gt;   &amp;#125;&lt;br&gt;   &lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;[%d] [%d] hi&#92;n&amp;quot;&lt;/span&gt;, getppid(), getpid());&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;附图理解：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/fork.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;htop&lt;/code&gt;中可以看到它漂亮的树型结构，父子进程关系是这样的&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/tree.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;wait&quot;&gt;&lt;a href=&quot;#wait&quot; class=&quot;headerlink&quot; title=&quot;wait()&quot;&gt;&lt;/a&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;&lt;code&gt;man 3 wait&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&quot;Task-amp-Example&quot;&gt;&lt;a href=&quot;#Task-amp-Example&quot; class=&quot;headerlink&quot; title=&quot;Task&amp;amp;Example&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.usna.edu/Users/cs/aviv/classes/ic221/s17/lab/07/lab.html&quot;&gt;Task&amp;amp;Example&lt;/a&gt;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/time.c&quot;&gt;&lt;code&gt;timer&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要求是&lt;code&gt;接收命令及其参数在 shell 中执行，并输出 start、end 时间之差&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在此例中，先&lt;code&gt;fork&lt;/code&gt;生成一个子进程，在子进程中使用&lt;code&gt;execvp(argv[1], argv);&lt;/code&gt;执行命令，父进程&lt;code&gt;wait&lt;/code&gt;等待子进程的结束并计算时间。注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exec 从内存中加载程序并执行，从而&lt;strong&gt;替换&lt;/strong&gt;了子进程&lt;/li&gt;
&lt;li&gt;所以选择在父进程中计时 end ，并 print 时间之差 diff (若在主程序会计时两次(fork~)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/ping.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;只要是按正常方式退出程序，即可以正确计时&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/mini-sh.c&quot;&gt;&lt;code&gt;mini-sh&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;拥有了&lt;a href=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/exec_fork_wait.c&quot;&gt;&lt;code&gt;exec-fork-wait&lt;/code&gt;&lt;/a&gt;循环我们就拥有了一个 shell 所具有的最基本的功能！所以可以来制造一个 mini-shell 了&lt;/p&gt;
&lt;p&gt;step 1：&lt;code&gt;token-sh&lt;/code&gt; 对输入的字符串流处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判断 &lt;code&gt;空行&lt;/code&gt;，&lt;code&gt;EOF&lt;/code&gt;等&lt;/li&gt;
&lt;li&gt;以空格分割，*cmd_argv[ ] 接收参数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;step 2: &lt;code&gt;while&lt;/code&gt;不断接受新输入，再加入上述的 &lt;code&gt;exec-fork-wait&lt;/code&gt;循环和 timer.c 功能&lt;/p&gt;
&lt;p&gt;这样得到一个可以计时的 shell 　如下&lt;br&gt;&lt;img src=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/shell.gif&quot;&gt;&lt;/p&gt;
&lt;p&gt;但是如果 ctrl+c 或 ctrl+z 会结束 mini-shell 。回到系统自己的 shell。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Thread&quot;&gt;&lt;a href=&quot;#Thread&quot; class=&quot;headerlink&quot; title=&quot;Thread&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.usna.edu/Users/cs/aviv/classes/ic221/s16/lec/28/lec.html&quot;&gt;Thread&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;类似进程，线程的生命周期始于创建，但不是 &lt;code&gt;fork()&lt;/code&gt;而来，而是由一个起始函数作为入口点创建。（TODO：感觉这话说着很矛盾，&lt;code&gt;fork&lt;/code&gt; 不也可以看做一个起始函数创建了子进程吗，应该是函数内部所做的操作有不同。后续有待了解吧）&lt;/p&gt;
&lt;h4 id=&quot;thread-creation&quot;&gt;&lt;a href=&quot;#thread-creation&quot; class=&quot;headerlink&quot; title=&quot;thread creation&quot;&gt;&lt;/a&gt;thread creation&lt;/h4&gt;&lt;h4 id=&quot;thread-termination&quot;&gt;&lt;a href=&quot;#thread-termination&quot; class=&quot;headerlink&quot; title=&quot;thread termination&quot;&gt;&lt;/a&gt;thread termination&lt;/h4&gt;&lt;p&gt;终止有以下情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线程完成任务&lt;/li&gt;
&lt;li&gt;父线程终止，所有子线程均终止&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;thread-join&quot;&gt;&lt;a href=&quot;#thread-join&quot; class=&quot;headerlink&quot; title=&quot;thread join&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pages.mtu.edu/~shene/NSF-3/e-Book/FUNDAMENTALS/thread-management.html&quot;&gt;thread join&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;本人之前一直按照意译将其理解为&lt;code&gt;线程加入&lt;/code&gt;，像进程一样到就绪队列中等待执行，完全错误，实际上&lt;code&gt;加入&lt;/code&gt;这个概念在&lt;code&gt;thread creation&lt;/code&gt;时做到了&lt;/p&gt;
&lt;p&gt;它类似于进程中使用的&lt;code&gt;wait()&lt;/code&gt;，调用线程被阻塞，等待被调用的线程修改状态&amp;#x2F;返回结果。是用于应对以下情况：&lt;/p&gt;
&lt;p&gt;主线程派发给子线程一个复杂任务，若主线程先于子线程结束，但是又需要在主线程中获得子线程的结果。&lt;br&gt;它不能悄悄地自己就终结了，所以有了该函数：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;int pthread_join(pthread_t thread, void **retval);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;举以下例子观察：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs C&quot;&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; * argv[])&lt;/span&gt;&amp;#123;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-type&quot;&gt;pthread_t&lt;/span&gt; thread;&lt;br&gt;&lt;br&gt;pthread_create(&amp;amp;thread, &lt;span class=&quot;hljs-literal&quot;&gt;NULL&lt;/span&gt;, hello_fun, &lt;span class=&quot;hljs-literal&quot;&gt;NULL&lt;/span&gt;);&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;random&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;random&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;random&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;random&amp;quot;&lt;/span&gt;);&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//sleep(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//hello_fun只是简单的print&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-comment&quot;&gt;//pthread_join(thread,NULL);&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当注释掉 &lt;code&gt;pthread_join()&lt;/code&gt; 得到多种结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/res2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;也就是说，如果把主进程视为 A，创建的子进程视为 B，随机出现了以下情况：&lt;code&gt;ABAB AABAAB BA A&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;令我比较困惑的是为什么主函数有可能执行两次（也就是 print 了 8 个 random），&lt;br&gt;创建线程后，两线程对等，互相抢占 CPU，抢到了即执行，并在主函数尾结束。&lt;/p&gt;
&lt;p&gt;但是当使用 &lt;code&gt;pthread_join()&lt;/code&gt; 时就只会出现一种结果，因为主线程已经堵塞（block）了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;读写者&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基于读写者互斥问题更好理解&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里给出的是一个写者优先的例子&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/ReadWriter.c&quot;&gt;ReadWriter.c&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;thread-yield&quot;&gt;&lt;a href=&quot;#thread-yield&quot; class=&quot;headerlink&quot; title=&quot;thread yield&quot;&gt;&lt;/a&gt;thread yield&lt;/h4&gt;&lt;h4 id=&quot;Threads-Running-Like-Processes&quot;&gt;&lt;a href=&quot;#Threads-Running-Like-Processes&quot; class=&quot;headerlink&quot; title=&quot;Threads Running Like Processes&quot;&gt;&lt;/a&gt;Threads Running Like Processes&lt;/h4&gt;&lt;p&gt;参考资料举了一个丧心病狂的例子让我四核的电脑 CPU 占用率瞬间飚至 400%&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;code class=&quot;hljs C&quot;&gt;&lt;span class=&quot;hljs-comment&quot;&gt;/* busy_thread.c*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;pthread.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&amp;lt;sys/syscall.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;define&lt;/span&gt; gettidv1() syscall(__NR_gettid) &lt;span class=&quot;hljs-comment&quot;&gt;// new form&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot;&gt;#&lt;span class=&quot;hljs-keyword&quot;&gt;define&lt;/span&gt; gettidv2() syscall(SYS_gettid)  &lt;span class=&quot;hljs-comment&quot;&gt;// traditional form&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; *&lt;span class=&quot;hljs-title function_&quot;&gt;hello_fun&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;void&lt;/span&gt; *args)&lt;/span&gt; &amp;#123;&lt;br&gt;    &lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;the pthread_1 id is %ld&#92;n&amp;quot;&lt;/span&gt;, pthread_self());&lt;br&gt;    &lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;the thread_1&amp;#x27;s Pid is %d&#92;n&amp;quot;&lt;/span&gt;, getpid());&lt;br&gt;    &lt;span class=&quot;hljs-built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&amp;quot;The LWPID/tid of thread_1 is: %ld&#92;n&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;hljs-type&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt;)gettidv1());&lt;br&gt;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;while&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;br&gt;    &lt;span class=&quot;hljs-comment&quot;&gt;//busy wait&lt;/span&gt;&lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;NULL&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;hljs-params&quot;&gt;(&lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;hljs-type&quot;&gt;char&lt;/span&gt; * argv[])&lt;/span&gt;&amp;#123;&lt;br&gt;  &lt;span class=&quot;hljs-type&quot;&gt;pthread_t&lt;/span&gt; thread[&lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;];  &lt;span class=&quot;hljs-comment&quot;&gt;//thread identifier&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-type&quot;&gt;int&lt;/span&gt; i;&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;//create 4 threads&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;; i++)&amp;#123;&lt;br&gt;    pthread_create(&amp;amp;thread[i], &lt;span class=&quot;hljs-literal&quot;&gt;NULL&lt;/span&gt;, hello_fun, &lt;span class=&quot;hljs-literal&quot;&gt;NULL&lt;/span&gt;);&lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&quot;hljs-comment&quot;&gt;//wait for all threads to finish&lt;/span&gt;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;for&lt;/span&gt;(i = &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt; ; i &amp;lt; &lt;span class=&quot;hljs-number&quot;&gt;4&lt;/span&gt;; i++)&amp;#123;&lt;br&gt;    pthread_join(thread[i], &lt;span class=&quot;hljs-literal&quot;&gt;NULL&lt;/span&gt;);&lt;br&gt;  &amp;#125;&lt;br&gt;  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;;&lt;br&gt;&amp;#125;&lt;br&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/pid.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PID&lt;/code&gt; vs &lt;code&gt;TID&lt;/code&gt; vs &lt;code&gt;pthread_t&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PID&lt;/code&gt; PID 进程号，四个线程均一样，唯一&lt;/li&gt;
&lt;li&gt;&lt;code&gt;TID&lt;/code&gt; 不一样，由 OS 生成，同一机器上所有 tid 唯一&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pthread_t&lt;/code&gt; 由&lt;code&gt;pthreads&lt;/code&gt;库生成，用来识别线程，不同进程可能有相同 &lt;code&gt;pthread_t id&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看到在&lt;code&gt;htop&lt;/code&gt;中直接把 tid 作为 pid 表示，类似进程的树型结构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2019/11/13/ThreadAndProcess-2019-11-13/busy.png&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;POSIX&quot;&gt;&lt;a href=&quot;#POSIX&quot; class=&quot;headerlink&quot; title=&quot;POSIX&quot;&gt;&lt;/a&gt;POSIX&lt;/h4&gt;&lt;p&gt;一种 Unix 系统特定的实现标准，其余很多系统均兼容，包括 Windows&lt;/p&gt;
&lt;h2 id=&quot;reference&quot;&gt;&lt;a href=&quot;#reference&quot; class=&quot;headerlink&quot; title=&quot;reference&quot;&gt;&lt;/a&gt;reference&lt;/h2&gt;&lt;p&gt;下面特别是 IC221 ，都是非常好的学习资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://pages.mtu.edu/~shene/NSF-3/e-Book/FUNDAMENTALS/thread-management.html&quot;&gt;Thread-Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.usna.edu/Users/cs/bilzor/ic221/calendar.php?load=home&quot;&gt;IC221 - Systems Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a</summary>
        
      
    
    
    
    
    <category term="进程与线程" scheme="http://r.piggy.lol/tags/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/"/>
    
    <category term="Linux" scheme="http://r.piggy.lol/tags/Linux/"/>
    
  </entry>
  
</feed>
